<?xml version='1.0' encoding='UTF-8'?><gexf xmlns="http://www.gexf.net/1.2draft" xmlns:viz="http://www.gexf.net/1.2draft/viz" version="1.2"><meta><creator>wwr</creator><description>App method invoke graph</description></meta><graph defaultedgetype="directed" idtype="string" mode="static"><attributes class="node" mode="static"><attribute id="0" title="codeArray" type="string"/></attributes><nodes count="1398"><node id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" label="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" label="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;clinit>()>" label="&lt;java.lang.String: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: void &lt;init>(java.lang.String)>" label="&lt;java.io.File: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.HashMap: void &lt;init>()>" label="&lt;java.util.HashMap: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: void &lt;clinit>()>" label="&lt;java.io.File: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" label="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.arch.lifecycle.LifecycleDispatcher: void &lt;clinit>()>" label="&lt;android.arch.lifecycle.LifecycleDispatcher: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentProvider: android.content.Context getContext()>" label="&lt;android.content.ContentProvider: android.content.Context getContext()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.arch.lifecycle.ProcessLifecycleOwner: void &lt;clinit>()>" label="&lt;android.arch.lifecycle.ProcessLifecycleOwner: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.arch.lifecycle.LifecycleDispatcher: void init(android.content.Context)>" label="&lt;android.arch.lifecycle.LifecycleDispatcher: void init(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.arch.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>" label="&lt;android.arch.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: void &lt;init>()>" label="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentProvider: void &lt;init>()>" label="&lt;android.content.ContentProvider: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.support.v4.content.FileProvider: boolean onCreate()>" label="&lt;android.support.v4.content.FileProvider: boolean onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.support.v4.content.FileProvider: void &lt;init>()>" label="&lt;android.support.v4.content.FileProvider: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void onDestroy()>" label="&lt;cn.jpush.android.service.PushService: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void &lt;init>()>" label="&lt;cn.jpush.android.util.DefaultLogger: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Object: void &lt;init>()>" label="&lt;java.lang.Object: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Object: void finalize()>" label="&lt;java.lang.Object: void finalize()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" label="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Exception: void &lt;init>()>" label="&lt;java.lang.Exception: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: void &lt;init>()>" label="&lt;java.lang.Throwable: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" label="&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: void &lt;init>()>" label="&lt;java.util.ArrayList: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>" label="&lt;android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>" label="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Build$VERSION: void &lt;clinit>()>" label="&lt;android.os.Build$VERSION: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.HandlerThread: boolean quit()>" label="&lt;android.os.HandlerThread: boolean quit()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.HandlerThread: boolean quitSafely()>" label="&lt;android.os.HandlerThread: boolean quitSafely()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" label="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.atomic.AtomicLong: void &lt;init>(long)>" label="&lt;java.util.concurrent.atomic.AtomicLong: void &lt;init>(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" label="&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" label="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.String toString()>" label="&lt;java.lang.StringBuilder: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: void &lt;init>()>" label="&lt;java.lang.StringBuilder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" label="&lt;java.util.concurrent.atomic.AtomicLong: long get()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.atomic.AtomicLong: void set(long)>" label="&lt;java.util.concurrent.atomic.AtomicLong: void set(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" label="&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void &lt;clinit>()>" label="&lt;java.lang.System: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: void printStackTrace()>" label="&lt;java.lang.Throwable: void printStackTrace()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void loadLibrary(java.lang.String)>" label="&lt;java.lang.System: void loadLibrary(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int e(java.lang.String,java.lang.String)>" label="&lt;android.util.Log: int e(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" label="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Message: void &lt;clinit>()>" label="&lt;android.os.Message: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" label="&lt;java.util.ArrayList: boolean add(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" label="&lt;cn.jpush.android.JPush: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush$1: void &lt;init>()>" label="&lt;cn.jpush.android.JPush$1: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" label="&lt;android.util.Log: int d(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int Close(long)>" label="&lt;cn.jpush.android.service.PushProtocol: int Close(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" label="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: void &lt;clinit>()>" label="&lt;android.os.Bundle: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: void putLong(java.lang.String,long)>" label="&lt;android.os.Bundle: void putLong(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: void &lt;init>()>" label="&lt;android.os.Bundle: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" label="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void interrupt()>" label="&lt;java.lang.Thread: void interrupt()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.TimeUnit: void &lt;clinit>()>" label="&lt;java.util.concurrent.TimeUnit: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int v(java.lang.String,java.lang.String)>" label="&lt;android.util.Log: int v(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: java.lang.Thread currentThread()>" label="&lt;java.lang.Thread: java.lang.Thread currentThread()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: android.content.Context getApplicationContext()>" label="&lt;android.app.Service: android.content.Context getApplicationContext()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: void onDestroy()>" label="&lt;android.app.Service: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;javax.security.auth.x500.X500Principal: void &lt;init>(java.lang.String)>" label="&lt;javax.security.auth.x500.X500Principal: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Process: int myPid()>" label="&lt;android.os.Process: int myPid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.String getCanonicalName()>" label="&lt;java.lang.Class: java.lang.String getCanonicalName()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: java.lang.String getMessage()>" label="&lt;java.lang.Throwable: java.lang.String getMessage()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ComponentName: void &lt;clinit>()>" label="&lt;android.content.ComponentName: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ComponentName: void &lt;init>(java.lang.String,java.lang.String)>" label="&lt;android.content.ComponentName: void &lt;init>(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>" label="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: boolean onUnbind(android.content.Intent)>" label="&lt;android.app.Service: boolean onUnbind(android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>" label="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" label="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" label="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" label="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>" label="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>" label="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: boolean sendEmptyMessage(int)>" label="&lt;android.os.Handler: boolean sendEmptyMessage(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: void removeMessages(int)>" label="&lt;android.os.Handler: void removeMessages(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: boolean hasMessages(int)>" label="&lt;android.os.Handler: boolean hasMessages(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" label="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" label="&lt;cn.jpush.android.data.LocalNotificationDB: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" label="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentValues: void &lt;clinit>()>" label="&lt;android.content.ContentValues: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" label="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentValues: void &lt;init>()>" label="&lt;android.content.ContentValues: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: void &lt;clinit>()>" label="&lt;java.lang.Integer: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" label="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" label="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" label="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" label="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" label="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>" label="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" label="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" label="&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" label="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" label="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" label="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Long)>" label="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" label="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Long: void &lt;clinit>()>" label="&lt;java.lang.Long: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Long: java.lang.Long valueOf(long)>" label="&lt;java.lang.Long: java.lang.Long valueOf(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" label="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_add_time(long)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_add_time(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_trigger_time(long)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_trigger_time(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_extra(java.lang.String)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_extra(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_type(int)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_type(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_remove(int)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_remove(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_count(int)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_count(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_id(long)>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_id(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" label="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int i(java.lang.String,java.lang.String)>" label="&lt;android.util.Log: int i(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" label="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_add_time()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_add_time()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_trigger_time()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_trigger_time()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String getLn_extra()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String getLn_extra()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_count()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_count()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>" label="&lt;android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_id()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_id()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_remove()>" label="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_remove()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$100()>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$100()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Context access$200(cn.jpush.android.service.JPushLocalNotificationCenter)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Context access$200(cn.jpush.android.service.JPushLocalNotificationCenter)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$102(cn.jpush.android.data.LocalNotificationDB)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$102(cn.jpush.android.data.LocalNotificationDB)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDBData access$300()>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDBData access$300()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: long currentTimeMillis()>" label="&lt;java.lang.System: long currentTimeMillis()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: java.lang.String access$400(cn.jpush.android.service.JPushLocalNotificationCenter)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: java.lang.String access$400(cn.jpush.android.service.JPushLocalNotificationCenter)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void access$500(cn.jpush.android.service.JPushLocalNotificationCenter,android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void access$500(cn.jpush.android.service.JPushLocalNotificationCenter,android.content.Context,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: void &lt;clinit>()>" label="&lt;android.content.Intent: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" label="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" label="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" label="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" label="&lt;android.content.Intent: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: boolean post(java.lang.Runnable)>" label="&lt;android.os.Handler: boolean post(java.lang.Runnable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void &lt;init>(cn.jpush.android.service.JPushLocalNotificationCenter,long)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void &lt;init>(cn.jpush.android.service.JPushLocalNotificationCenter,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" label="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init>()>" label="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface$TagAliasCallbackReceiver: void &lt;init>()>" label="&lt;cn.jpush.android.service.ServiceInterface$TagAliasCallbackReceiver: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.BroadcastReceiver: void &lt;init>()>" label="&lt;android.content.BroadcastReceiver: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" label="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" label="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" label="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: int getServiceStoppedFlag(android.content.Context)>" label="&lt;cn.jpush.android.Configs: int getServiceStoppedFlag(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int w(java.lang.String,java.lang.String)>" label="&lt;android.util.Log: int w(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" label="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.LinkedList: void &lt;init>()>" label="&lt;java.util.LinkedList: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" label="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" label="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.LinkedList: java.lang.Object poll()>" label="&lt;java.util.LinkedList: java.lang.Object poll()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.LinkedList: int size()>" label="&lt;java.util.LinkedList: int size()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" label="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>" label="&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" label="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" label="&lt;android.os.Handler: void &lt;init>(android.os.Looper)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Looper: android.os.Looper getMainLooper()>" label="&lt;android.os.Looper: android.os.Looper getMainLooper()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" label="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void run()>" label="&lt;cn.jpush.android.service.NetworkingClient: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" label="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" label="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.AckNormal: int getRequestCommand()>" label="&lt;cn.jpush.proto.common.commands.AckNormal: int getRequestCommand()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: int getCommand()>" label="&lt;cn.jpush.proto.common.imcommands.IMProtocol: int getCommand()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.IMResponse: cn.jpush.proto.common.imcommands.IMProtocol getIMProtocol()>" label="&lt;cn.jpush.proto.common.commands.IMResponse: cn.jpush.proto.common.imcommands.IMProtocol getIMProtocol()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" label="&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ServiceHelper: boolean isImPushCommand(int)>" label="&lt;cn.jpush.android.helpers.ServiceHelper: boolean isImPushCommand(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" label="&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.gson.jpush.JsonParser: void &lt;init>()>" label="&lt;com.google.gson.jpush.JsonParser: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" label="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" label="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" label="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>" label="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" label="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" label="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: char charAt(int)>" label="&lt;java.lang.String: char charAt(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" label="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuffer: java.lang.String toString()>" label="&lt;java.lang.StringBuffer: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuffer: void &lt;init>(int)>" label="&lt;java.lang.StringBuffer: void &lt;init>(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.AbstractStringBuilder: void &lt;init>()>" label="&lt;java.lang.AbstractStringBuilder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.SimpleLog: void debug(java.lang.String)>" label="&lt;cn.jpush.proto.common.utils.SimpleLog: void debug(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" label="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" label="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" label="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;init>()>" label="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>" label="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>" label="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" label="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>" label="&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" label="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONArray: void &lt;init>()>" label="&lt;org.json.JSONArray: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONArray: java.lang.Object get(int)>" label="&lt;org.json.JSONArray: java.lang.Object get(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONArray: int length()>" label="&lt;org.json.JSONArray: int length()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONArray: org.json.JSONObject optJSONObject(int)>" label="&lt;org.json.JSONArray: org.json.JSONObject optJSONObject(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.StringWriter: java.lang.String toString()>" label="&lt;java.io.StringWriter: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.StringWriter: void &lt;init>()>" label="&lt;java.io.StringWriter: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.PrintWriter: void &lt;init>(java.io.Writer)>" label="&lt;java.io.PrintWriter: void &lt;init>(java.io.Writer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" label="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>" label="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>" label="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: void &lt;init>()>" label="&lt;org.json.JSONObject: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: int getInt(java.lang.String)>" label="&lt;org.json.JSONObject: int getInt(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" label="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: void &lt;clinit>()>" label="&lt;org.json.JSONObject: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" label="&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" label="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean exists()>" label="&lt;java.io.File: boolean exists()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" label="&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" label="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuffer: void &lt;init>()>" label="&lt;java.lang.StringBuffer: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: int length()>" label="&lt;java.lang.String: int length()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;init>(byte[],int,int)>" label="&lt;java.lang.String: void &lt;init>(byte[],int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>" label="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" label="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean delete()>" label="&lt;java.io.File: boolean delete()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushCrashHandler: cn.jpush.android.api.JPushCrashHandler getInstance()>" label="&lt;cn.jpush.android.api.JPushCrashHandler: cn.jpush.android.api.JPushCrashHandler getInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" label="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" label="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Byte: void &lt;clinit>()>" label="&lt;java.lang.Byte: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Byte: java.lang.Byte valueOf(byte)>" label="&lt;java.lang.Byte: java.lang.Byte valueOf(byte)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" label="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" label="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" label="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>" label="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Collections: void &lt;clinit>()>" label="&lt;java.util.Collections: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Collections: java.util.List emptyList()>" label="&lt;java.util.Collections: java.util.List emptyList()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" label="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Cookie: cn.jpush.im.proto.Im$Cookie getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Im$Cookie: cn.jpush.im.proto.Im$Cookie getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Login: void initFields()>" label="&lt;cn.jpush.im.proto.User$Login: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Login: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.User$Login: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Logout: void initFields()>" label="&lt;cn.jpush.im.proto.User$Logout: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Logout: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.User$Logout: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>" label="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$MessageContent: void initFields()>" label="&lt;cn.jpush.im.proto.Message$MessageContent: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>" label="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddFriend: void initFields()>" label="&lt;cn.jpush.im.proto.Friend$AddFriend: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelFriend: void initFields()>" label="&lt;cn.jpush.im.proto.Friend$DelFriend: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void initFields()>" label="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$CreateGroup: void initFields()>" label="&lt;cn.jpush.im.proto.Group$CreateGroup: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$ExitGroup: void initFields()>" label="&lt;cn.jpush.im.proto.Group$ExitGroup: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>" label="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>" label="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void initFields()>" label="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventSync: void initFields()>" label="&lt;cn.jpush.im.proto.Message$EventSync: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventAnswer: void initFields()>" label="&lt;cn.jpush.im.proto.Message$EventAnswer: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>" label="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>" label="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Response: void initFields()>" label="&lt;cn.jpush.im.proto.Im$Response: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Response: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Im$Response: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$ReportInformation: void initFields()>" label="&lt;cn.jpush.im.proto.User$ReportInformation: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void initFields()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void initFields()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void initFields()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void initFields()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void initFields()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void initFields()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Login: cn.jpush.im.proto.User$Login getDefaultInstance()>" label="&lt;cn.jpush.im.proto.User$Login: cn.jpush.im.proto.User$Login getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$Logout: cn.jpush.im.proto.User$Logout getDefaultInstance()>" label="&lt;cn.jpush.im.proto.User$Logout: cn.jpush.im.proto.User$Logout getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$SingleMsg: cn.jpush.im.proto.Message$SingleMsg getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$SingleMsg: cn.jpush.im.proto.Message$SingleMsg getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$GroupMsg: cn.jpush.im.proto.Message$GroupMsg getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$GroupMsg: cn.jpush.im.proto.Message$GroupMsg getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddFriend: cn.jpush.im.proto.Friend$AddFriend getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Friend$AddFriend: cn.jpush.im.proto.Friend$AddFriend getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelFriend: cn.jpush.im.proto.Friend$DelFriend getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Friend$DelFriend: cn.jpush.im.proto.Friend$DelFriend getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: cn.jpush.im.proto.Friend$UpdateMemo getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Friend$UpdateMemo: cn.jpush.im.proto.Friend$UpdateMemo getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$CreateGroup: cn.jpush.im.proto.Group$CreateGroup getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Group$CreateGroup: cn.jpush.im.proto.Group$CreateGroup getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$ExitGroup: cn.jpush.im.proto.Group$ExitGroup getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Group$ExitGroup: cn.jpush.im.proto.Group$ExitGroup getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$AddGroupMember: cn.jpush.im.proto.Group$AddGroupMember getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Group$AddGroupMember: cn.jpush.im.proto.Group$AddGroupMember getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$DelGroupMember: cn.jpush.im.proto.Group$DelGroupMember getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Group$DelGroupMember: cn.jpush.im.proto.Group$DelGroupMember getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: cn.jpush.im.proto.Group$UpdateGroupInfo getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: cn.jpush.im.proto.Group$UpdateGroupInfo getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventSync: cn.jpush.im.proto.Message$EventSync getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$EventSync: cn.jpush.im.proto.Message$EventSync getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventAnswer: cn.jpush.im.proto.Message$EventAnswer getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$EventAnswer: cn.jpush.im.proto.Message$EventAnswer getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$AddBlackList: cn.jpush.im.proto.Friend$AddBlackList getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Friend$AddBlackList: cn.jpush.im.proto.Friend$AddBlackList getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Friend$DelBlackList: cn.jpush.im.proto.Friend$DelBlackList getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Friend$DelBlackList: cn.jpush.im.proto.Friend$DelBlackList getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Response: cn.jpush.im.proto.Im$Response getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Im$Response: cn.jpush.im.proto.Im$Response getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.User$ReportInformation: cn.jpush.im.proto.User$ReportInformation getDefaultInstance()>" label="&lt;cn.jpush.im.proto.User$ReportInformation: cn.jpush.im.proto.User$ReportInformation getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: com.google.protobuf.jpush.ByteString getAppkey()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: com.google.protobuf.jpush.ByteString getAppkey()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: long getUid()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: long getUid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: int getVer()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: int getVer()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolHead: int getCmd()>" label="&lt;cn.jpush.im.proto.Im$ProtocolHead: int getCmd()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDeleteMsgNoDisturbGlobal()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDeleteMsgNoDisturbGlobal()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getAddMsgNoDisturbGlobal()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getAddMsgNoDisturbGlobal()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDeleteMsgNoDisturbGroup()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDeleteMsgNoDisturbGroup()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getAddMsgNoDisturbGroup()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getAddMsgNoDisturbGroup()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDeleteMsgNoDisturbSingle()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDeleteMsgNoDisturbSingle()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getAddMsgNoDisturbSingle()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getAddMsgNoDisturbSingle()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$ReportInformation getReportInfo()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$ReportInformation getReportInfo()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelBlackList getDelBlacklist()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelBlackList getDelBlacklist()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddBlackList getAddBlacklist()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddBlackList getAddBlacklist()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventAnswer getEventAnswer()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventAnswer getEventAnswer()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventSync getEventSync()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventSync getEventSync()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$ChatMsgSync getChatMsg()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$ChatMsgSync getChatMsg()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventNotification getEventNotification()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventNotification getEventNotification()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$UpdateGroupInfo getUpdateGroupInfo()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$UpdateGroupInfo getUpdateGroupInfo()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$DelGroupMember getDelGroupMember()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$DelGroupMember getDelGroupMember()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$AddGroupMember getAddGroupMember()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$AddGroupMember getAddGroupMember()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$ExitGroup getExitGroup()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$ExitGroup getExitGroup()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$CreateGroup getCreateGroup()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$CreateGroup getCreateGroup()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$UpdateMemo getUpdateMemo()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$UpdateMemo getUpdateMemo()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelFriend getDelFriend()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelFriend getDelFriend()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddFriend getAddFriend()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddFriend getAddFriend()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$GroupMsg getGroupMsg()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$GroupMsg getGroupMsg()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$SingleMsg getSingleMsg()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$SingleMsg getSingleMsg()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Logout getLogout()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Logout getLogout()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Login getLogin()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Login getLogin()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$Response getCommonRep()>" label="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$Response getCommonRep()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody getBody()>" label="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody getBody()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead getHead()>" label="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead getHead()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>" label="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet$Builder newBuilder()>" label="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet$Builder newBuilder()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder access$5100()>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder access$5100()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder create()>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder create()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void maybeForceBuilderInitialization()>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: void maybeForceBuilderInitialization()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" label="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet access$5000(cn.jpush.im.proto.Im$Packet$Builder)>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet access$5000(cn.jpush.im.proto.Im$Packet$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" label="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: boolean isInitialized()>" label="&lt;cn.jpush.im.proto.Im$Packet: boolean isInitialized()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" label="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder,cn.jpush.im.proto.Im$1)>" label="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder,cn.jpush.im.proto.Im$1)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder)>" label="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" label="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead access$5302(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolHead)>" label="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead access$5302(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolHead)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody access$5402(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolBody)>" label="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody access$5402(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolBody)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Packet: int access$5502(cn.jpush.im.proto.Im$Packet,int)>" label="&lt;cn.jpush.im.proto.Im$Packet: int access$5502(cn.jpush.im.proto.Im$Packet,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" label="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] getBytesConsumed(java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] getBytesConsumed(java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.LoginResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.LoginResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.AckNormal: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.AckNormal: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.MessagePush: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.MessagePush: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.IMResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" label="&lt;cn.jpush.proto.common.commands.IMResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" label="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JHead: long getJuid()>" label="&lt;cn.jpush.proto.common.commands.JHead: long getJuid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.Long getRid()>" label="&lt;cn.jpush.proto.common.commands.JHead: java.lang.Long getRid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JPushProtocol: cn.jpush.proto.common.commands.JHead getHead()>" label="&lt;cn.jpush.proto.common.commands.JPushProtocol: cn.jpush.proto.common.commands.JHead getHead()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String getMsgContent()>" label="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String getMsgContent()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.MessagePush: int getMsgType()>" label="&lt;cn.jpush.proto.common.commands.MessagePush: int getMsgType()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.MessagePush: long getMsgId()>" label="&lt;cn.jpush.proto.common.commands.MessagePush: long getMsgId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.LineNumberReader: java.lang.String readLine()>" label="&lt;java.io.LineNumberReader: java.lang.String readLine()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.LineNumberReader: void &lt;init>(java.io.Reader)>" label="&lt;java.io.LineNumberReader: void &lt;init>(java.io.Reader)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.StringReader: void &lt;init>(java.lang.String)>" label="&lt;java.io.StringReader: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String substring(int)>" label="&lt;java.lang.String: java.lang.String substring(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(long,long,int,java.lang.String,int)>" label="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(long,long,int,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(int,int,long,long,int,java.lang.String)>" label="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(int,int,long,long,int,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>" label="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>" label="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" label="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: long getUid()>" label="&lt;cn.jpush.android.Configs: long getUid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: int getSid()>" label="&lt;cn.jpush.android.Configs: int getSid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int MsgResponse(long,int,long,byte,long,long,int)>" label="&lt;cn.jpush.android.service.PushProtocol: int MsgResponse(long,int,long,byte,long,long,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.TimeWatcher: void show()>" label="&lt;cn.jpush.android.util.TimeWatcher: void show()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.TimeWatcher: void start()>" label="&lt;cn.jpush.android.util.TimeWatcher: void start()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.text.TextUtils: void &lt;clinit>()>" label="&lt;android.text.TextUtils: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" label="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" label="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>" label="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" label="&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" label="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity: cn.jpush.android.data.Entity$EntityKey getEntityKey()>" label="&lt;cn.jpush.android.data.Entity: cn.jpush.android.data.Entity$EntityKey getEntityKey()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity$EntityKey: void &lt;init>(cn.jpush.android.data.Entity,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.data.Entity$EntityKey: void &lt;init>(cn.jpush.android.data.Entity,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" label="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.BasicEntity: void &lt;init>()>" label="&lt;cn.jpush.android.data.BasicEntity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity: void &lt;init>()>" label="&lt;cn.jpush.android.data.Entity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" label="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" label="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" label="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" label="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" label="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" label="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" label="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" label="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String trim()>" label="&lt;java.lang.String: java.lang.String trim()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" label="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" label="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" label="&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" label="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" label="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" label="&lt;cn.jpush.android.data.ShowEntity$1: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: boolean isEmpty()>" label="&lt;java.util.ArrayList: boolean isEmpty()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" label="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>" label="&lt;java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void run()>" label="&lt;cn.jpush.android.service.RequestingThread: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.HandlerThread: void run()>" label="&lt;android.os.HandlerThread: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: long getId()>" label="&lt;java.lang.Thread: long getId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity$1: void run()>" label="&lt;cn.jpush.android.data.PkEntity$1: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String substring(int,int)>" label="&lt;java.lang.String: java.lang.String substring(int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" label="&lt;java.lang.String: int lastIndexOf(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean matches(java.lang.String)>" label="&lt;java.lang.String: boolean matches(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>" label="&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" label="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" label="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Locale: void &lt;clinit>()>" label="&lt;java.util.Locale: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Locale: java.util.Locale getDefault()>" label="&lt;java.util.Locale: java.util.Locale getDefault()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" label="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" label="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" label="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.URL: java.net.URLConnection openConnection()>" label="&lt;java.net.URL: java.net.URLConnection openConnection()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.URL: void &lt;init>(java.lang.String)>" label="&lt;java.net.URL: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" label="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.ByteArrayOutputStream: void &lt;init>()>" label="&lt;java.io.ByteArrayOutputStream: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()>" label="&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.ByteArrayOutputStream: void write(byte[],int,int)>" label="&lt;java.io.ByteArrayOutputStream: void write(byte[],int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void sleep(long)>" label="&lt;java.lang.Thread: void sleep(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" label="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean equals(java.lang.Object)>" label="&lt;java.lang.String: boolean equals(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: java.lang.String toString()>" label="&lt;org.json.JSONObject: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Build: void &lt;clinit>()>" label="&lt;android.os.Build: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: java.lang.String toString(int)>" label="&lt;java.lang.Integer: java.lang.String toString(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>" label="&lt;android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;init>(java.lang.String)>" label="&lt;java.lang.String: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" label="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" label="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: java.util.Iterator iterator()>" label="&lt;java.util.ArrayList: java.util.Iterator iterator()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: int size()>" label="&lt;java.util.ArrayList: int size()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean startsWith(java.lang.String)>" label="&lt;java.lang.String: boolean startsWith(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" label="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" label="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" label="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean mkdir()>" label="&lt;java.io.File: boolean mkdir()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" label="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean createNewFile()>" label="&lt;java.io.File: boolean createNewFile()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void close()>" label="&lt;java.io.FileOutputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void flush()>" label="&lt;java.io.FileOutputStream: void flush()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void write(byte[])>" label="&lt;java.io.FileOutputStream: void write(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" label="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: java.lang.String getPackageName()>" label="&lt;android.app.IntentService: java.lang.String getPackageName()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean mkdirs()>" label="&lt;java.io.File: boolean mkdirs()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: java.lang.String getAbsolutePath()>" label="&lt;java.io.File: java.lang.String getAbsolutePath()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Environment: java.lang.String getExternalStorageState()>" label="&lt;android.os.Environment: java.lang.String getExternalStorageState()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" label="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" label="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContextWrapper: java.io.File getFilesDir()>" label="&lt;android.content.ContextWrapper: java.io.File getFilesDir()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: java.io.File[] listFiles()>" label="&lt;java.io.File: java.io.File[] listFiles()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean isDirectory()>" label="&lt;java.io.File: boolean isDirectory()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils$1: void &lt;init>()>" label="&lt;cn.jpush.android.util.DirectoryUtils$1: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>" label="&lt;java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" label="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: java.lang.String[] list()>" label="&lt;java.io.File: java.lang.String[] list()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean isFile()>" label="&lt;java.io.File: boolean isFile()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" label="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: byte[] getBytes(java.lang.String)>" label="&lt;java.lang.String: byte[] getBytes(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" label="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>" label="&lt;java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger$1: void run()>" label="&lt;cn.jpush.android.util.Logger$1: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" label="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedWriter: void close()>" label="&lt;java.io.BufferedWriter: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: java.lang.String getName()>" label="&lt;java.io.File: java.lang.String getName()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: java.io.File getParentFile()>" label="&lt;java.io.File: java.io.File getParentFile()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedWriter: void write(java.lang.String)>" label="&lt;java.io.BufferedWriter: void write(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedWriter: void &lt;init>(java.io.Writer)>" label="&lt;java.io.BufferedWriter: void &lt;init>(java.io.Writer)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileWriter: void &lt;init>(java.lang.String)>" label="&lt;java.io.FileWriter: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: void clear()>" label="&lt;java.util.ArrayList: void clear()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" label="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>" label="&lt;java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Date: void &lt;init>()>" label="&lt;java.util.Date: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: java.util.ArrayList access$000()>" label="&lt;cn.jpush.android.util.Logger: java.util.ArrayList access$000()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void access$100()>" label="&lt;cn.jpush.android.util.Logger: void access$100()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" label="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" label="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>" label="&lt;java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DateUtils: boolean isDaysAgo(java.util.Date,int)>" label="&lt;cn.jpush.android.util.DateUtils: boolean isDaysAgo(java.util.Date,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Calendar: java.util.Calendar getInstance()>" label="&lt;java.util.Calendar: java.util.Calendar getInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity$2: void run()>" label="&lt;cn.jpush.android.data.PkEntity$2: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" label="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" label="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" label="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" label="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" label="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent addFlags(int)>" label="&lt;android.content.Intent: android.content.Intent addFlags(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" label="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>" label="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: void &lt;init>()>" label="&lt;android.content.Intent: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" label="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" label="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" label="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: byte[] getBytes()>" label="&lt;java.lang.String: byte[] getBytes()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.Adler32: long getValue()>" label="&lt;java.util.zip.Adler32: long getValue()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.Adler32: void update(byte[])>" label="&lt;java.util.zip.Adler32: void update(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.Adler32: void &lt;init>()>" label="&lt;java.util.zip.Adler32: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" label="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Math: int abs(int)>" label="&lt;java.lang.Math: int abs(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" label="&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.LinkedList: boolean offer(java.lang.Object)>" label="&lt;java.util.LinkedList: boolean offer(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.LinkedList: boolean contains(java.lang.Object)>" label="&lt;java.util.LinkedList: boolean contains(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: java.lang.String getDeveloperArg0()>" label="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: java.lang.String getDeveloperArg0()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" label="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.RemoteViews: void &lt;clinit>()>" label="&lt;android.widget.RemoteViews: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>" label="&lt;android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.RemoteViews: void setImageViewResource(int,int)>" label="&lt;android.widget.RemoteViews: void setImageViewResource(int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" label="&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>" label="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" label="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification build()>" label="&lt;android.app.Notification$Builder: android.app.Notification build()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" label="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification: void &lt;init>(int,java.lang.CharSequence,long)>" label="&lt;android.app.Notification: void &lt;init>(int,java.lang.CharSequence,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification: void &lt;clinit>()>" label="&lt;android.app.Notification: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" label="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" label="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: java.lang.String getDeveloperArg0()>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: java.lang.String getDeveloperArg0()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" label="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" label="&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" label="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>" label="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.PendingIntent: void &lt;clinit>()>" label="&lt;android.app.PendingIntent: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>" label="&lt;java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" label="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.HashMap: java.util.Set keySet()>" label="&lt;java.util.HashMap: java.util.Set keySet()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" label="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>" label="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" label="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" label="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" label="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" label="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" label="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: int parseInt(java.lang.String)>" label="&lt;java.lang.Integer: int parseInt(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.UUID: java.util.UUID randomUUID()>" label="&lt;java.util.UUID: java.util.UUID randomUUID()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" label="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" label="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: int getNotifiFlag(int)>" label="&lt;cn.jpush.android.api.NotificationHelper: int getNotifiFlag(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getSilencePushTime(android.content.Context)>" label="&lt;cn.jpush.android.Configs: java.lang.String getSilencePushTime(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" label="&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" label="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" label="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>" label="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity$2: void &lt;init>(cn.jpush.android.data.PkEntity,android.content.Context,int,cn.jpush.android.data.PkEntity)>" label="&lt;cn.jpush.android.data.PkEntity$2: void &lt;init>(cn.jpush.android.data.PkEntity,android.content.Context,int,cn.jpush.android.data.PkEntity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void &lt;init>()>" label="&lt;java.lang.Thread: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void start()>" label="&lt;java.lang.Thread: void start()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>" label="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity$1: void &lt;init>(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context,int)>" label="&lt;cn.jpush.android.data.PkEntity$1: void &lt;init>(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isPackageExist(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isPackageExist(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" label="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" label="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" label="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" label="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>" label="&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" label="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>" label="&lt;org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: boolean isNull(java.lang.String)>" label="&lt;org.json.JSONObject: boolean isNull(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" label="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" label="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" label="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>" label="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.VideoEntity: void &lt;init>()>" label="&lt;cn.jpush.android.data.VideoEntity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.UpdateEntity: void &lt;init>()>" label="&lt;cn.jpush.android.data.UpdateEntity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void &lt;init>(java.lang.String,android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void &lt;init>(java.lang.String,android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.JPushView$1: void run()>" label="&lt;cn.jpush.android.data.JPushView$1: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.URL: java.lang.Object getContent()>" label="&lt;java.net.URL: java.lang.Object getContent()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.JPushView: void &lt;clinit>()>" label="&lt;cn.jpush.android.data.JPushView: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.view.View: void &lt;clinit>()>" label="&lt;android.view.View: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>" label="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$002(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>" label="&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$002(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$102(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>" label="&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$102(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void run()>" label="&lt;java.lang.Thread: void run()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" label="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper$1: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.api.NotificationHelper$1: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.ShowEntity$1: void &lt;init>(cn.jpush.android.data.ShowEntity,cn.jpush.android.data.ShowEntity,android.content.Context)>" label="&lt;cn.jpush.android.data.ShowEntity$1: void &lt;init>(cn.jpush.android.data.ShowEntity,cn.jpush.android.data.ShowEntity,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" label="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.gson.jpush.JsonParser: com.google.gson.jpush.JsonElement parse(java.lang.String)>" label="&lt;com.google.gson.jpush.JsonParser: com.google.gson.jpush.JsonElement parse(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: long optLong(java.lang.String)>" label="&lt;org.json.JSONObject: long optLong(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>" label="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushInterface$ErrorCode: void &lt;clinit>()>" label="&lt;cn.jpush.android.api.JPushInterface$ErrorCode: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" label="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Im$Response: int getCode()>" label="&lt;cn.jpush.im.proto.Im$Response: int getCode()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: cn.jpush.im.proto.Im$Response getResponse()>" label="&lt;cn.jpush.proto.common.imcommands.IMProtocol: cn.jpush.im.proto.Im$Response getResponse()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" label="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>" label="&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" label="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" label="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" label="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" label="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>" label="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" label="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isStopExecuted(android.content.Context)>" label="&lt;cn.jpush.android.Configs: boolean isStopExecuted(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" label="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: boolean isUserInteraction()>" label="&lt;cn.jpush.android.service.ServiceInterface: boolean isUserInteraction()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" label="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ComponentName: void &lt;init>(android.content.Context,java.lang.Class)>" label="&lt;android.content.ComponentName: void &lt;init>(android.content.Context,java.lang.Class)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" label="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" label="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void setEntity(java.lang.Object)>" label="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void setEntity(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.Object getEntity()>" label="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.Object getEntity()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: long getGid()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: long getGid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: long getFromUid()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: long getFromUid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: int getEventType()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: int getEventType()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: long getEventId()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: long getEventId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>" label="&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>" label="&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>" label="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,long)>" label="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: boolean isInitialized()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: boolean isInitialized()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder,cn.jpush.im.proto.Message$1)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder,cn.jpush.im.proto.Message$1)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2402(cn.jpush.im.proto.Message$EventNotification,long)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2402(cn.jpush.im.proto.Message$EventNotification,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: int access$2502(cn.jpush.im.proto.Message$EventNotification,int)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: int access$2502(cn.jpush.im.proto.Message$EventNotification,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2602(cn.jpush.im.proto.Message$EventNotification,long)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2602(cn.jpush.im.proto.Message$EventNotification,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2702(cn.jpush.im.proto.Message$EventNotification,long)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2702(cn.jpush.im.proto.Message$EventNotification,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)>" label="&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: java.util.List access$2802(cn.jpush.im.proto.Message$EventNotification,java.util.List)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: java.util.List access$2802(cn.jpush.im.proto.Message$EventNotification,java.util.List)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: com.google.protobuf.jpush.ByteString access$2902(cn.jpush.im.proto.Message$EventNotification,com.google.protobuf.jpush.ByteString)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: com.google.protobuf.jpush.ByteString access$2902(cn.jpush.im.proto.Message$EventNotification,com.google.protobuf.jpush.ByteString)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3002(cn.jpush.im.proto.Message$EventNotification,int)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3002(cn.jpush.im.proto.Message$EventNotification,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3102(cn.jpush.im.proto.Message$EventNotification,int)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3102(cn.jpush.im.proto.Message$EventNotification,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3202(cn.jpush.im.proto.Message$EventNotification,int)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3202(cn.jpush.im.proto.Message$EventNotification,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3302(cn.jpush.im.proto.Message$EventNotification,int)>" label="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3302(cn.jpush.im.proto.Message$EventNotification,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setGid(long)>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setGid(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setFromUid(long)>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setFromUid(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventType(int)>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventType(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventId(long)>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventId(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification$Builder newBuilder()>" label="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification$Builder newBuilder()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder access$2200()>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder access$2200()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder create()>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder create()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void maybeForceBuilderInitialization()>" label="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void maybeForceBuilderInitialization()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" label="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List getChatMsgList()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List getChatMsgList()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromGid()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromGid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromUid()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromUid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: int getMsgType()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: int getMsgType()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: long getMsgid()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: long getMsgid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: boolean isInitialized()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: boolean isInitialized()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(boolean)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder,cn.jpush.im.proto.Message$1)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder,cn.jpush.im.proto.Message$1)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3702(cn.jpush.im.proto.Message$ChatMsg,long)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3702(cn.jpush.im.proto.Message$ChatMsg,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3802(cn.jpush.im.proto.Message$ChatMsg,long)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3802(cn.jpush.im.proto.Message$ChatMsg,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3902(cn.jpush.im.proto.Message$ChatMsg,long)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3902(cn.jpush.im.proto.Message$ChatMsg,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4002(cn.jpush.im.proto.Message$ChatMsg,int)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4002(cn.jpush.im.proto.Message$ChatMsg,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$MessageContent access$4102(cn.jpush.im.proto.Message$ChatMsg,cn.jpush.im.proto.Message$MessageContent)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$MessageContent access$4102(cn.jpush.im.proto.Message$ChatMsg,cn.jpush.im.proto.Message$MessageContent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4202(cn.jpush.im.proto.Message$ChatMsg,int)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4202(cn.jpush.im.proto.Message$ChatMsg,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4302(cn.jpush.im.proto.Message$ChatMsg,int)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4302(cn.jpush.im.proto.Message$ChatMsg,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4402(cn.jpush.im.proto.Message$ChatMsg,int)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4402(cn.jpush.im.proto.Message$ChatMsg,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromGid(long)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromGid(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromUid(long)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromUid(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgType(int)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgType(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgid(long)>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgid(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: boolean isInitialized()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: boolean isInitialized()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder,cn.jpush.im.proto.Message$1)>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder,cn.jpush.im.proto.Message$1)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder)>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List access$4802(cn.jpush.im.proto.Message$ChatMsgSync,java.util.List)>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List access$4802(cn.jpush.im.proto.Message$ChatMsgSync,java.util.List)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.NullPointerException: void &lt;init>()>" label="&lt;java.lang.NullPointerException: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.RuntimeException: void &lt;init>()>" label="&lt;java.lang.RuntimeException: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void ensureChatMsgIsMutable()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void ensureChatMsgIsMutable()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: void &lt;init>(java.util.Collection)>" label="&lt;java.util.ArrayList: void &lt;init>(java.util.Collection)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync$Builder newBuilder()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync$Builder newBuilder()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder access$4600()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder access$4600()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder create()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder create()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void maybeForceBuilderInitialization()>" label="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void maybeForceBuilderInitialization()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$ChatMsg$Builder newBuilder()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$ChatMsg$Builder newBuilder()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder access$3500()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder access$3500()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder create()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder create()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void maybeForceBuilderInitialization()>" label="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void maybeForceBuilderInitialization()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" label="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" label="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: long InitConn()>" label="&lt;cn.jpush.android.service.PushProtocol: long InitConn()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramSocket: void close()>" label="&lt;java.net.DatagramSocket: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramSocket: void receive(java.net.DatagramPacket)>" label="&lt;java.net.DatagramSocket: void receive(java.net.DatagramPacket)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramSocket: void send(java.net.DatagramPacket)>" label="&lt;java.net.DatagramSocket: void send(java.net.DatagramPacket)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramSocket: void setSoTimeout(int)>" label="&lt;java.net.DatagramSocket: void setSoTimeout(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramSocket: void &lt;init>()>" label="&lt;java.net.DatagramSocket: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.ArrayList: java.lang.Object get(int)>" label="&lt;java.util.ArrayList: java.lang.Object get(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" label="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;init>(byte[])>" label="&lt;java.lang.String: void &lt;init>(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramPacket: byte[] getData()>" label="&lt;java.net.DatagramPacket: byte[] getData()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramPacket: int getLength()>" label="&lt;java.net.DatagramPacket: int getLength()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramPacket: void &lt;init>(byte[],int)>" label="&lt;java.net.DatagramPacket: void &lt;init>(byte[],int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.DatagramPacket: void &lt;init>(byte[],int,java.net.InetAddress,int)>" label="&lt;java.net.DatagramPacket: void &lt;init>(byte[],int,java.net.InetAddress,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" label="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" label="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>" label="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.gson.jpush.Gson: void &lt;init>()>" label="&lt;com.google.gson.jpush.Gson: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" label="&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.SisInfo: cn.jpush.android.service.SisInfo fromJson(java.lang.String)>" label="&lt;cn.jpush.android.service.SisInfo: cn.jpush.android.service.SisInfo fromJson(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" label="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void join(long)>" label="&lt;java.lang.Thread: void join(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void &lt;init>(java.lang.String)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>" label="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>" label="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] int2ByteArray(int)>" label="&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] int2ByteArray(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" label="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" label="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>" label="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int InitPush(long,java.lang.String,int)>" label="&lt;cn.jpush.android.service.PushProtocol: int InitPush(long,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>" label="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>" label="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>" label="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getDeviceId()>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getDeviceId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getRegId()>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getRegId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getPassword()>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getPassword()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.RegisterResponse: long getJuid()>" label="&lt;cn.jpush.proto.common.commands.RegisterResponse: long getJuid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" label="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>" label="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>" label="&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.provider.Settings$Secure: void &lt;clinit>()>" label="&lt;android.provider.Settings$Secure: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>" label="&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>" label="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Runtime: java.lang.Runtime getRuntime()>" label="&lt;java.lang.Runtime: java.lang.Runtime getRuntime()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: char[] toCharArray()>" label="&lt;java.lang.String: char[] toCharArray()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" label="&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: java.lang.String toHexString(int)>" label="&lt;java.lang.Integer: java.lang.String toHexString(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getOldSavedKey(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getOldSavedKey(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String CheckSavedKey(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String CheckSavedKey(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>" label="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" label="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" label="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.InputStreamReader: void close()>" label="&lt;java.io.InputStreamReader: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream,java.lang.String)>" label="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedReader: void close()>" label="&lt;java.io.BufferedReader: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedReader: java.lang.String readLine()>" label="&lt;java.io.BufferedReader: java.lang.String readLine()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader,int)>" label="&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>" label="&lt;java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" label="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" label="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" label="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>" label="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" label="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Enum: int ordinal()>" label="&lt;java.lang.Enum: int ordinal()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;init>(java.lang.String,int)>" label="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;init>(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Enum: void &lt;init>(java.lang.String,int)>" label="&lt;java.lang.Enum: void &lt;init>(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>" label="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.provider.Settings$System: void &lt;clinit>()>" label="&lt;android.provider.Settings$System: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>" label="&lt;android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>" label="&lt;android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: long getNextRid()>" label="&lt;cn.jpush.android.Configs: long getNextRid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: long getStartRid()>" label="&lt;cn.jpush.android.Configs: long getStartRid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Random: int nextInt(int)>" label="&lt;java.util.Random: int nextInt(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Random: void &lt;init>()>" label="&lt;java.util.Random: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int RegPush(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.PushProtocol: int RegPush(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int RecvPush(long,byte[],int)>" label="&lt;cn.jpush.android.service.PushProtocol: int RecvPush(long,byte[],int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>" label="&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" label="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" label="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" label="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" label="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>" label="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>" label="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.ByteArrayInputStream: void &lt;init>(byte[])>" label="&lt;java.io.ByteArrayInputStream: void &lt;init>(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>" label="&lt;java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" label="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.LoginResponse: int getServerTime()>" label="&lt;cn.jpush.proto.common.commands.LoginResponse: int getServerTime()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.LoginResponse: int getSid()>" label="&lt;cn.jpush.proto.common.commands.LoginResponse: int getSid()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" label="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: short getIMLoginFlag()>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: short getIMLoginFlag()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int LogPush(long,long,byte[],long,java.lang.String,java.lang.String,long,short)>" label="&lt;cn.jpush.android.service.PushProtocol: int LogPush(long,long,byte[],long,java.lang.String,java.lang.String,long,short)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" label="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_10()>" label="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_10()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_3_10()>" label="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_3_10()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1_3()>" label="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1_3()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1()>" label="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: int getTotal()>" label="&lt;cn.jpush.android.data.StatisticsDBData: int getTotal()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: int getFailed()>" label="&lt;cn.jpush.android.data.StatisticsDBData: int getFailed()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" label="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: void close()>" label="&lt;cn.jpush.android.data.StatisticsDB: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" label="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" label="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" label="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_10(int)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_10(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_3_10(int)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_3_10(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1_3(int)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1_3(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1(int)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setTotal(int)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setTotal(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setFailed(int)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setFailed(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_source(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_source(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_local_dns(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_local_dns(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_conn_ip(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_conn_ip(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_net(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_net(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_sort(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_sort(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDBData: void &lt;init>()>" label="&lt;cn.jpush.android.data.StatisticsDBData: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" label="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" label="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>" label="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" label="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" label="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" label="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>" label="&lt;java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>" label="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" label="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setSid(int)>" label="&lt;cn.jpush.android.Configs: void setSid(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" label="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.NetworkingClient: void &lt;init>(android.content.Context,android.os.Handler,boolean)>" label="&lt;cn.jpush.android.service.NetworkingClient: void &lt;init>(android.content.Context,android.os.Handler,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void onBackground()>" label="&lt;cn.jpush.android.service.PushService: void onBackground()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void onForeground()>" label="&lt;cn.jpush.android.service.PushService: void onForeground()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" label="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" label="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)>" label="&lt;java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollLast()>" label="&lt;java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollLast()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.LinkedBlockingDeque: int size()>" label="&lt;java.util.concurrent.LinkedBlockingDeque: int size()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" label="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>" label="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentHashMap: int size()>" label="&lt;java.util.concurrent.ConcurrentHashMap: int size()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" label="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.LinkedBlockingDeque: java.util.Iterator iterator()>" label="&lt;java.util.concurrent.LinkedBlockingDeque: java.util.Iterator iterator()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: void stopSelf()>" label="&lt;android.app.Service: void stopSelf()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ConnectionState: void &lt;init>(java.lang.String,int)>" label="&lt;cn.jpush.android.service.ConnectionState: void &lt;init>(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" label="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Enum: java.lang.String name()>" label="&lt;java.lang.Enum: java.lang.String name()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>" label="&lt;android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" label="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ConnectionState: cn.jpush.android.service.ConnectionState valueOf(java.lang.String)>" label="&lt;cn.jpush.android.service.ConnectionState: cn.jpush.android.service.ConnectionState valueOf(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>" label="&lt;java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>" label="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" label="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: boolean isTimeoutNeedRestart()>" label="&lt;cn.jpush.android.service.PushService: boolean isTimeoutNeedRestart()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>" label="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.commands.TagaliasRequest: void &lt;init>(long,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.proto.common.commands.TagaliasRequest: void &lt;init>(long,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>" label="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.google.gson.jpush.GsonBuilder: void &lt;init>()>" label="&lt;com.google.gson.jpush.GsonBuilder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" label="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" label="&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.WakelockManager: android.os.PowerManager$WakeLock getWakelock()>" label="&lt;cn.jpush.android.service.WakelockManager: android.os.PowerManager$WakeLock getWakelock()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.WakelockManager: void setWakelock(android.os.PowerManager$WakeLock)>" label="&lt;cn.jpush.android.service.WakelockManager: void setWakelock(android.os.PowerManager$WakeLock)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" label="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.WakelockManager: void &lt;init>()>" label="&lt;cn.jpush.android.service.WakelockManager: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" label="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void onCreate()>" label="&lt;cn.jpush.android.service.PushService: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" label="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService$1: void &lt;init>(cn.jpush.android.service.PushService,long)>" label="&lt;cn.jpush.android.service.PushService$1: void &lt;init>(cn.jpush.android.service.PushService,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" label="&lt;cn.jpush.android.service.PushService: void resetAlarm()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void initService()>" label="&lt;cn.jpush.android.service.PushService: void initService()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" label="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>" label="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.ref.WeakReference: void &lt;init>(java.lang.Object)>" label="&lt;java.lang.ref.WeakReference: void &lt;init>(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.HandlerThread: android.os.Looper getLooper()>" label="&lt;android.os.HandlerThread: android.os.Looper getLooper()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.HandlerThread: void &lt;init>(java.lang.String)>" label="&lt;android.os.HandlerThread: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.LinkedBlockingDeque: void &lt;init>()>" label="&lt;java.util.concurrent.LinkedBlockingDeque: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" label="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.atomic.AtomicBoolean: boolean get()>" label="&lt;java.util.concurrent.atomic.AtomicBoolean: boolean get()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" label="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DeviceInfoUtil: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.DeviceInfoUtil: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.String getSimpleName()>" label="&lt;java.lang.Class: java.lang.String getSimpleName()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: java.lang.String getVersion()>" label="&lt;cn.jpush.android.service.ServiceInterface: java.lang.String getVersion()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DeviceInfoUtil: java.lang.String getVersion(android.content.Context)>" label="&lt;cn.jpush.android.util.DeviceInfoUtil: java.lang.String getVersion(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>" label="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DeviceInfoUtil: void setVersion(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.DeviceInfoUtil: void setVersion(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" label="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" label="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" label="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" label="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushProtocol: int GetSdkVersion()>" label="&lt;cn.jpush.android.service.PushProtocol: int GetSdkVersion()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>" label="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" label="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>" label="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" label="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>" label="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>" label="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: void registerCallback(android.app.Application)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: void registerCallback(android.app.Application)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: void initNetSetting()>" label="&lt;cn.jpush.android.JPush: void initNetSetting()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>" label="&lt;java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" label="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>" label="&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.IntentFilter: void addDataScheme(java.lang.String)>" label="&lt;android.content.IntentFilter: void addDataScheme(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.IntentFilter: void &lt;init>(java.lang.String)>" label="&lt;android.content.IntentFilter: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.IntentFilter: void addCategory(java.lang.String)>" label="&lt;android.content.IntentFilter: void addCategory(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.IntentFilter: void setPriority(int)>" label="&lt;android.content.IntentFilter: void setPriority(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushReceiver: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.PushReceiver: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.IntentFilter: void &lt;clinit>()>" label="&lt;android.content.IntentFilter: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" label="&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" label="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" label="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>" label="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: void clearRegistered()>" label="&lt;cn.jpush.android.Configs: void clearRegistered()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.BasePreferenceManager: void removeKey(java.lang.String)>" label="&lt;cn.jpush.android.util.BasePreferenceManager: void removeKey(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" label="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" label="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ReportUtils: void close(java.io.Closeable)>" label="&lt;cn.jpush.android.util.ReportUtils: void close(java.io.Closeable)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>" label="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" label="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean isEmpty()>" label="&lt;java.lang.String: boolean isEmpty()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" label="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" label="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" label="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>" label="&lt;java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: void onCreate()>" label="&lt;android.app.Service: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.MultiStubHelper: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.helpers.MultiStubHelper: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>" label="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Binder: void &lt;init>()>" label="&lt;android.os.Binder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>" label="&lt;android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>" label="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: void &lt;init>()>" label="&lt;android.os.Handler: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushService: void &lt;init>()>" label="&lt;cn.jpush.android.service.PushService: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: void &lt;init>()>" label="&lt;android.app.Service: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.JPushSA: boolean isStatEnable()>" label="&lt;cn.jpush.android.api.JPushSA: boolean isStatEnable()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$100()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$100()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$202(java.lang.String)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$202(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$102(boolean)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$102(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$300()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$300()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" label="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: int hashCode()>" label="&lt;java.lang.String: int hashCode()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" label="&lt;android.app.Notification$Builder: android.app.Notification getNotification()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$302(java.lang.String)>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$302(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$000()>" label="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$000()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>" label="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void onDestroy()>" label="&lt;android.app.Activity: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void onPause()>" label="&lt;cn.jpush.android.ui.PushActivity: void onPause()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void onPause()>" label="&lt;android.app.Activity: void onPause()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>" label="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void finish()>" label="&lt;android.app.Activity: void finish()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void onResume()>" label="&lt;cn.jpush.android.ui.PushActivity: void onResume()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void onResume()>" label="&lt;android.app.Activity: void onResume()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" label="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>" label="&lt;android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Message: void &lt;init>()>" label="&lt;android.os.Message: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" label="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)>" label="&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: android.content.Intent getIntent()>" label="&lt;android.app.Activity: android.content.Intent getIntent()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void onCreate(android.os.Bundle)>" label="&lt;android.app.Activity: void onCreate(android.os.Bundle)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>" label="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.ui.PushActivity$1: void &lt;init>(cn.jpush.android.ui.PushActivity)>" label="&lt;cn.jpush.android.ui.PushActivity$1: void &lt;init>(cn.jpush.android.ui.PushActivity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void &lt;init>()>" label="&lt;android.app.Activity: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>" label="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: void onDestroy()>" label="&lt;android.app.IntentService: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" label="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>" label="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" label="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: android.content.Context getApplicationContext()>" label="&lt;android.app.IntentService: android.content.Context getApplicationContext()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>" label="&lt;android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>" label="&lt;android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Notification: void &lt;init>()>" label="&lt;android.app.Notification: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" label="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContextWrapper: android.os.Looper getMainLooper()>" label="&lt;android.content.ContextWrapper: android.os.Looper getMainLooper()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: void remove(java.lang.String)>" label="&lt;android.os.Bundle: void remove(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Bundle: long getLong(java.lang.String,long)>" label="&lt;android.os.Bundle: long getLong(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>" label="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void close()>" label="&lt;java.io.BufferedOutputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: void close()>" label="&lt;java.io.BufferedInputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>" label="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>" label="&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Long: java.lang.Long valueOf(java.lang.String)>" label="&lt;java.lang.Long: java.lang.Long valueOf(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" label="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>" label="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: int getBestRetryTimes(long)>" label="&lt;cn.jpush.android.service.DownloadControl: int getBestRetryTimes(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" label="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" label="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" label="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: cn.jpush.android.data.Entity access$000(cn.jpush.android.service.DownloadService)>" label="&lt;cn.jpush.android.service.DownloadService: cn.jpush.android.data.Entity access$000(cn.jpush.android.service.DownloadService)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: android.os.Handler access$200(cn.jpush.android.service.DownloadService)>" label="&lt;cn.jpush.android.service.DownloadService: android.os.Handler access$200(cn.jpush.android.service.DownloadService)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void access$300(cn.jpush.android.service.DownloadService,cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.service.DownloadService: void access$300(cn.jpush.android.service.DownloadService,cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" label="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" label="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" label="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>" label="&lt;android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>" label="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" label="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>" label="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: android.content.pm.PackageManager getPackageManager()>" label="&lt;android.app.IntentService: android.content.pm.PackageManager getPackageManager()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" label="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" label="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.DbHelper: void &lt;init>(android.content.Context)>" label="&lt;cn.jpush.android.data.DbHelper: void &lt;init>(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>" label="&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.net.Uri: void &lt;clinit>()>" label="&lt;android.net.Uri: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.net.Uri: android.net.Uri fromFile(java.io.File)>" label="&lt;android.net.Uri: android.net.Uri fromFile(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: long length()>" label="&lt;java.io.File: long length()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: void &lt;init>(java.lang.String,java.lang.String)>" label="&lt;java.io.File: void &lt;init>(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: int read(byte[])>" label="&lt;java.io.BufferedInputStream: int read(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>" label="&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File,boolean)>" label="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void flush()>" label="&lt;java.io.BufferedOutputStream: void flush()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>" label="&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>" label="&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>" label="&lt;android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" label="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" label="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String)>" label="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" label="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" label="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" label="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileInputStream: void close()>" label="&lt;java.io.FileInputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileInputStream: int read(byte[])>" label="&lt;java.io.FileInputStream: int read(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Integer: java.lang.String toString(int,int)>" label="&lt;java.lang.Integer: java.lang.String toString(int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" label="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" label="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: android.app.NotificationManager access$400(cn.jpush.android.service.DownloadService)>" label="&lt;cn.jpush.android.service.DownloadService: android.app.NotificationManager access$400(cn.jpush.android.service.DownloadService)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl: boolean isRealFailed(int)>" label="&lt;cn.jpush.android.service.DownloadControl: boolean isRealFailed(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void access$500(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.Entity,int)>" label="&lt;cn.jpush.android.service.DownloadService: void access$500(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.Entity,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" label="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>" label="&lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadControl$DownloadHandler: void &lt;init>(cn.jpush.android.service.DownloadControl,android.os.Looper,cn.jpush.android.service.DownloadControl$DownloadListener)>" label="&lt;cn.jpush.android.service.DownloadControl$DownloadHandler: void &lt;init>(cn.jpush.android.service.DownloadControl,android.os.Looper,cn.jpush.android.service.DownloadControl$DownloadListener)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService$1: void &lt;init>(cn.jpush.android.service.DownloadService,boolean,int)>" label="&lt;cn.jpush.android.service.DownloadService$1: void &lt;init>(cn.jpush.android.service.DownloadService,boolean,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Thread: void setPriority(int)>" label="&lt;java.lang.Thread: void setPriority(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" label="&lt;cn.jpush.android.service.DownloadService: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: void onCreate()>" label="&lt;android.app.IntentService: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService$ToastHandler: void &lt;init>(cn.jpush.android.service.DownloadService,android.content.Context)>" label="&lt;cn.jpush.android.service.DownloadService$ToastHandler: void &lt;init>(cn.jpush.android.service.DownloadService,android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.HashMap: int size()>" label="&lt;java.util.HashMap: int size()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" label="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.IntentService: void &lt;init>(java.lang.String)>" label="&lt;android.app.IntentService: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService$2: void &lt;init>(cn.jpush.android.service.DownloadService)>" label="&lt;cn.jpush.android.service.DownloadService$2: void &lt;init>(cn.jpush.android.service.DownloadService)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DaemonService: void onDestroy()>" label="&lt;cn.jpush.android.service.DaemonService: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DaemonService: android.os.IBinder onBind(android.content.Intent)>" label="&lt;cn.jpush.android.service.DaemonService: android.os.IBinder onBind(android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DaemonService: int onStartCommand(android.content.Intent,int,int)>" label="&lt;cn.jpush.android.service.DaemonService: int onStartCommand(android.content.Intent,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Service: int onStartCommand(android.content.Intent,int,int)>" label="&lt;android.app.Service: int onStartCommand(android.content.Intent,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" label="&lt;cn.jpush.android.service.DaemonService: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" label="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.BaseBundle: void putInt(java.lang.String,int)>" label="&lt;android.os.BaseBundle: void putInt(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DaemonService: void &lt;init>()>" label="&lt;cn.jpush.android.service.DaemonService: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" label="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.AlarmReceiver: void &lt;init>()>" label="&lt;cn.jpush.android.service.AlarmReceiver: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" label="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.text.style.ForegroundColorSpan: void &lt;init>(int)>" label="&lt;android.text.style.ForegroundColorSpan: void &lt;init>(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>" label="&lt;android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.text.SpannableStringBuilder: void &lt;init>(java.lang.CharSequence)>" label="&lt;android.text.SpannableStringBuilder: void &lt;init>(java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.BroadcastReceiver: void abortBroadcast()>" label="&lt;android.content.BroadcastReceiver: void abortBroadcast()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>" label="&lt;android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>" label="&lt;android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)>" label="&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.os.Bundle getExtras()>" label="&lt;android.content.Intent: android.os.Bundle getExtras()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: int getIntExtra(java.lang.String,int)>" label="&lt;android.content.Intent: int getIntExtra(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>" label="&lt;android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: java.lang.String getDataString()>" label="&lt;android.content.Intent: java.lang.String getDataString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: java.lang.String getAction()>" label="&lt;android.content.Intent: java.lang.String getAction()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.net.NetworkInfo$State: void &lt;clinit>()>" label="&lt;android.net.NetworkInfo$State: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" label="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>" label="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" label="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean endsWith(java.lang.String)>" label="&lt;java.lang.String: boolean endsWith(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" label="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" label="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: int length()>" label="&lt;org.json.JSONObject: int length()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent setFlags(int)>" label="&lt;android.content.Intent: android.content.Intent setFlags(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>" label="&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent findLaunchIntentForActivity(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent findLaunchIntentForActivity(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" label="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" label="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: boolean isNotificationEnabled(android.content.Context)>" label="&lt;cn.jpush.android.Configs: boolean isNotificationEnabled(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.Configs: java.lang.String getPushTime(android.content.Context)>" label="&lt;cn.jpush.android.Configs: java.lang.String getPushTime(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String valueOf(char)>" label="&lt;java.lang.String: java.lang.String valueOf(char)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>" label="&lt;android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>" label="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" label="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" label="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" label="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>" label="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" label="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>" label="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" label="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onDestroy()>" label="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onDestroy()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: android.os.IBinder onBind(android.content.Intent)>" label="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: android.os.IBinder onBind(android.content.Intent)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>" label="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" label="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.LogAir: void uploadAirEventsAsync()>" label="&lt;com.airbnb.android.aireventlogger.LogAir: void uploadAirEventsAsync()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" label="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;init>()>" label="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Activity: void &lt;clinit>()>" label="&lt;android.app.Activity: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node></nodes><edges count="4777"><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;android.support.v4.content.FileProvider: boolean onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;android.support.v4.content.FileProvider: boolean onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;android.support.v4.content.FileProvider: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;android.support.v4.content.FileProvider: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: void onDestroy()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: void onDestroy()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: void onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: void onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.ui.PushActivity: void onPause()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.ui.PushActivity: void onPause()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.ui.PushActivity: void onResume()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.ui.PushActivity: void onResume()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DownloadService: void onDestroy()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DownloadService: void onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DaemonService: void onDestroy()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DaemonService: void onDestroy()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DaemonService: android.os.IBinder onBind(android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DaemonService: android.os.IBinder onBind(android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DaemonService: int onStartCommand(android.content.Intent,int,int)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DaemonService: int onStartCommand(android.content.Intent,int,int)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DaemonService: void onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DaemonService: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DaemonService: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.AlarmReceiver: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.AlarmReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onDestroy()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onDestroy()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: android.os.IBinder onBind(android.content.Intent)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: android.os.IBinder onBind(android.content.Intent)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;init>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;android.app.Activity: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;android.app.Activity: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;cn.jpush.android.service.PushReceiver: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;cn.jpush.android.service.PushReceiver: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>-->&lt;java.util.HashMap: void &lt;init>()>" source="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" target="&lt;java.util.HashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;android.support.v4.content.FileProvider: void &lt;clinit>()>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>-->&lt;android.arch.lifecycle.LifecycleDispatcher: void &lt;clinit>()>" source="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" target="&lt;android.arch.lifecycle.LifecycleDispatcher: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>-->&lt;android.content.ContentProvider: android.content.Context getContext()>" source="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" target="&lt;android.content.ContentProvider: android.content.Context getContext()>" type="directed" label=""/><edge id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>-->&lt;android.arch.lifecycle.ProcessLifecycleOwner: void &lt;clinit>()>" source="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" target="&lt;android.arch.lifecycle.ProcessLifecycleOwner: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>-->&lt;android.arch.lifecycle.LifecycleDispatcher: void init(android.content.Context)>" source="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" target="&lt;android.arch.lifecycle.LifecycleDispatcher: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>-->&lt;android.arch.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>" source="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>" target="&lt;android.arch.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: void &lt;init>()>-->&lt;android.content.ContentProvider: void &lt;init>()>" source="&lt;android.arch.lifecycle.ProcessLifecycleOwnerInitializer: void &lt;init>()>" target="&lt;android.content.ContentProvider: void &lt;init>()>" type="directed" label=""/><edge id="&lt;android.support.v4.content.FileProvider: void &lt;init>()>-->&lt;android.content.ContentProvider: void &lt;init>()>" source="&lt;android.support.v4.content.FileProvider: void &lt;init>()>" target="&lt;android.content.ContentProvider: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.service.RequestingThread: void quitThread()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;android.app.Service: void onDestroy()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;android.app.Service: void onDestroy()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;android.os.Process: int myPid()>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;android.os.Process: int myPid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onDestroy()>-->&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void onDestroy()>" target="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>-->&lt;cn.jpush.android.util.DefaultLogger: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" target="&lt;cn.jpush.android.util.DefaultLogger: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>-->&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" target="&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.util.DefaultLogger: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Object: void &lt;init>()>-->&lt;java.lang.Object: void finalize()>" source="&lt;java.lang.Object: void &lt;init>()>" target="&lt;java.lang.Object: void finalize()>" type="directed" label=""/><edge id="&lt;java.lang.Object: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Object: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Object: void finalize()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Object: void finalize()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>-->&lt;java.lang.Exception: void &lt;init>()>" source="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Exception: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Exception: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Exception: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Exception: void &lt;init>()>-->&lt;java.lang.Throwable: void &lt;init>()>" source="&lt;java.lang.Exception: void &lt;init>()>" target="&lt;java.lang.Throwable: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.Throwable: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>-->&lt;android.os.HandlerThread: boolean quit()>" source="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>" target="&lt;android.os.HandlerThread: boolean quit()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>-->&lt;android.os.HandlerThread: boolean quitSafely()>" source="&lt;cn.jpush.android.service.RequestingThread: void quitThread()>" target="&lt;android.os.HandlerThread: boolean quitSafely()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>-->&lt;java.util.concurrent.atomic.AtomicLong: void &lt;init>(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" target="&lt;java.util.concurrent.atomic.AtomicLong: void &lt;init>(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>-->&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" source="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.util.concurrent.atomic.AtomicLong: void set(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.util.concurrent.atomic.AtomicLong: void set(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.service.PushProtocol: int Close(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.service.PushProtocol: int Close(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;java.lang.System: void loadLibrary(java.lang.String)>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;java.lang.System: void loadLibrary(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: void printStackTrace()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: void printStackTrace()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>-->&lt;android.util.Log: int e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>" target="&lt;android.util.Log: int e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void &lt;clinit>()>-->&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" source="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void &lt;clinit>()>-->&lt;cn.jpush.android.JPush$1: void &lt;init>()>" source="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" target="&lt;cn.jpush.android.JPush$1: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush$1: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.JPush$1: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>-->&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>" target="&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>-->&lt;android.os.Bundle: void putLong(java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" target="&lt;android.os.Bundle: void putLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>-->&lt;java.lang.Thread: void interrupt()>" source="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" target="&lt;java.lang.Thread: void interrupt()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>-->&lt;java.util.concurrent.TimeUnit: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" target="&lt;java.util.concurrent.TimeUnit: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>-->&lt;java.lang.Thread: java.lang.Thread currentThread()>" source="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" target="&lt;java.lang.Thread: java.lang.Thread currentThread()>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void interrupt()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void interrupt()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>-->&lt;android.util.Log: int v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>" target="&lt;android.util.Log: int v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>-->&lt;javax.security.auth.x500.X500Principal: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" target="&lt;javax.security.auth.x500.X500Principal: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>-->&lt;java.lang.Class: java.lang.String getCanonicalName()>" source="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" target="&lt;java.lang.Class: java.lang.String getCanonicalName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void unregisterPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.String getCanonicalName()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.String getCanonicalName()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: java.lang.String getMessage()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: java.lang.String getMessage()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>-->&lt;android.content.ComponentName: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" target="&lt;android.content.ComponentName: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>-->&lt;android.content.ComponentName: void &lt;init>(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" target="&lt;android.content.ComponentName: void &lt;init>(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>-->&lt;android.app.Service: boolean onUnbind(android.content.Intent)>" source="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>" target="&lt;android.app.Service: boolean onUnbind(android.content.Intent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: boolean onUnbind(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: android.os.IBinder onBind(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;android.os.Handler: boolean sendEmptyMessage(int)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;android.os.Handler: boolean sendEmptyMessage(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;android.os.Handler: void removeMessages(int)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;android.os.Handler: void removeMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;android.os.Handler: boolean hasMessages(int)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;android.os.Handler: boolean hasMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.PushService: void onBackground()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.PushService: void onBackground()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.PushService: void onForeground()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.PushService: void onForeground()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;org.json.JSONObject: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;org.json.JSONObject: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.proto.common.commands.TagaliasRequest: void &lt;init>(long,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.proto.common.commands.TagaliasRequest: void &lt;init>(long,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleServiceAction(java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>" source="&lt;cn.jpush.android.service.RequestingThread: void sendRequest(cn.jpush.proto.common.commands.JRequest,int)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void handleActionForMultiType(android.os.Bundle)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void clear(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>-->&lt;android.content.ContentValues: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" target="&lt;android.content.ContentValues: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>-->&lt;android.content.ContentValues: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" target="&lt;android.content.ContentValues: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean removeAllLN()>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openWritableDatabase()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean openReadableDataBase()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>-->&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" target="&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>-->&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" target="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_add_time()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_add_time()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_trigger_time()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_trigger_time()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String getLn_extra()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String getLn_extra()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_count()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_count()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean remove(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;java.lang.Long: java.lang.Long valueOf(long)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Long: java.lang.Long valueOf(long)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_add_time(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_add_time(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_trigger_time(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_trigger_time(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_extra(java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_extra(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_type(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_type(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_remove(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_remove(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_count(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_count(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_id(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void setLn_id(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>-->&lt;android.util.Log: int i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>" target="&lt;android.util.Log: int i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_id()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_id()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: boolean add(android.content.Context,cn.jpush.android.data.JPushLocalNotification)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;android.os.Handler: boolean post(java.lang.Runnable)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;android.os.Handler: boolean post(java.lang.Runnable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void &lt;init>(cn.jpush.android.service.JPushLocalNotificationCenter,long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void &lt;init>(cn.jpush.android.service.JPushLocalNotificationCenter,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void scheduleReadiedLN(long,long,int)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" source="&lt;android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean updateData(long,int,int,int,java.lang.String,long,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void initData(android.database.Cursor,cn.jpush.android.data.LocalNotificationDBData)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: android.database.Cursor fetchData(long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: boolean open(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_add_time()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_add_time()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_trigger_time()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_trigger_time()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String getLn_extra()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: java.lang.String getLn_extra()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_id()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: long getLn_id()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_count()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_count()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_remove()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDBData: int getLn_remove()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.data.LocalNotificationDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$100()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$100()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Context access$200(cn.jpush.android.service.JPushLocalNotificationCenter)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Context access$200(cn.jpush.android.service.JPushLocalNotificationCenter)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$102(cn.jpush.android.data.LocalNotificationDB)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$102(cn.jpush.android.data.LocalNotificationDB)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDBData access$300()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDBData access$300()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: java.lang.String access$400(cn.jpush.android.service.JPushLocalNotificationCenter)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: java.lang.String access$400(cn.jpush.android.service.JPushLocalNotificationCenter)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void access$500(cn.jpush.android.service.JPushLocalNotificationCenter,android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void access$500(cn.jpush.android.service.JPushLocalNotificationCenter,android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$100()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$100()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$102(cn.jpush.android.data.LocalNotificationDB)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDB access$102(cn.jpush.android.data.LocalNotificationDB)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDBData access$300()>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.data.LocalNotificationDBData access$300()>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void access$500(cn.jpush.android.service.JPushLocalNotificationCenter,android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void access$500(cn.jpush.android.service.JPushLocalNotificationCenter,android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void broadCastToPushReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: android.content.Intent createPendingIntent(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;android.os.Handler: boolean post(java.lang.Runnable)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" source="&lt;android.os.Handler: boolean post(java.lang.Runnable)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void &lt;init>(cn.jpush.android.service.JPushLocalNotificationCenter,long)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter$2: void &lt;init>(cn.jpush.android.service.JPushLocalNotificationCenter,long)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;android.content.ContentValues: void &lt;init>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;android.content.ContentValues: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.data.LocalNotificationDB: long insertData(long,int,int,int,java.lang.String,long,long)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>-->&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" target="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>-->&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" source="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>-->&lt;cn.jpush.android.service.ServiceInterface$TagAliasCallbackReceiver: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" target="&lt;cn.jpush.android.service.ServiceInterface$TagAliasCallbackReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface$TagAliasCallbackReceiver: void &lt;init>()>-->&lt;android.content.BroadcastReceiver: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface$TagAliasCallbackReceiver: void &lt;init>()>" target="&lt;android.content.BroadcastReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isStoped(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;cn.jpush.android.Configs: int getServiceStoppedFlag(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;cn.jpush.android.Configs: int getServiceStoppedFlag(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;android.os.Process: int myPid()>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;android.os.Process: int myPid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getServiceStoppedFlag(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: int getServiceStoppedFlag(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>-->&lt;android.util.Log: int w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>" target="&lt;android.util.Log: int w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: int getInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>-->&lt;java.util.LinkedList: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" target="&lt;java.util.LinkedList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.Configs: void setCustomBuilder(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: int getInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>-->&lt;java.util.LinkedList: java.lang.Object poll()>" source="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" target="&lt;java.util.LinkedList: java.lang.Object poll()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>-->&lt;java.util.LinkedList: int size()>" source="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" target="&lt;java.util.LinkedList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void decreaseNotificationQueue(android.content.Context,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>-->&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" target="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: cn.jpush.android.service.JPushLocalNotificationCenter getInstance(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>-->&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" target="&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>-->&lt;android.os.Looper: android.os.Looper getMainLooper()>" source="&lt;cn.jpush.android.service.JPushLocalNotificationCenter: void &lt;init>(android.content.Context)>" target="&lt;android.os.Looper: android.os.Looper getMainLooper()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.service.PushService: void shutdownNetworkingClient(java.util.concurrent.ExecutorService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.service.NetworkingClient: void run()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.service.NetworkingClient: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;init>(android.content.Context,android.os.Handler,boolean)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;init>(android.content.Context,android.os.Handler,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;android.os.Process: int myPid()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;android.os.Process: int myPid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>-->&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" source="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" target="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.NetworkingClient: void closeConnection()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.util.concurrent.atomic.AtomicLong: void set(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.util.concurrent.atomic.AtomicLong: void set(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.Thread: long getId()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.Thread: long getId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;java.lang.Thread: java.lang.Thread currentThread()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;java.lang.Thread: java.lang.Thread currentThread()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.PushProtocol: long InitConn()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.PushProtocol: long InitConn()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.service.PushProtocol: int RecvPush(long,byte[],int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.service.PushProtocol: int RecvPush(long,byte[],int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void run()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void run()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>-->&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" source="&lt;cn.jpush.android.service.NetworkingClient: void receivedCommand(android.content.Context,int,byte[])>" target="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;cn.jpush.proto.common.commands.AckNormal: int getRequestCommand()>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;cn.jpush.proto.common.commands.AckNormal: int getRequestCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void handleNormalAck(cn.jpush.proto.common.commands.JResponse,long)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: int getCommand()>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: int getCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.IMResponse: cn.jpush.proto.common.imcommands.IMProtocol getIMProtocol()>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.IMResponse: cn.jpush.proto.common.imcommands.IMProtocol getIMProtocol()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.AckNormal: int getRequestCommand()>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.AckNormal: int getRequestCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.helpers.ServiceHelper: boolean isImPushCommand(int)>" source="&lt;cn.jpush.android.service.NetworkingClient: boolean isPushCommands(cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.helpers.ServiceHelper: boolean isImPushCommand(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>-->&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" target="&lt;cn.jpush.proto.common.commands.JResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>-->&lt;com.google.gson.jpush.JsonParser: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" target="&lt;com.google.gson.jpush.JsonParser: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;cn.jpush.proto.common.commands.JHead: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void debug(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void debug(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>-->&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" target="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>-->&lt;java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" target="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,byte[])>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>-->&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" source="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" target="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>-->&lt;java.lang.StringBuffer: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" target="&lt;java.lang.StringBuffer: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>-->&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" source="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" target="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>-->&lt;java.lang.StringBuffer: void &lt;init>(int)>" source="&lt;cn.jpush.proto.common.utils.StringUtils: java.lang.String toHexLog(byte[])>" target="&lt;java.lang.StringBuffer: void &lt;init>(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>-->&lt;java.lang.String: char charAt(int)>" source="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" target="&lt;java.lang.String: char charAt(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>-->&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" source="&lt;cn.jpush.proto.common.utils.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" target="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: java.lang.String toString()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.StringBuffer: java.lang.String toString()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: void &lt;init>(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.StringBuffer: void &lt;init>(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: void &lt;init>(int)>-->&lt;java.lang.AbstractStringBuilder: void &lt;init>()>" source="&lt;java.lang.StringBuffer: void &lt;init>(int)>" target="&lt;java.lang.AbstractStringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.AckNormal: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.AckNormal: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.MessagePush: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.IMResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.IMResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void warn(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.RegisterResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" source="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.android.api.JPushCrashHandler: cn.jpush.android.api.JPushCrashHandler getInstance()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: cn.jpush.android.api.JPushCrashHandler getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>-->&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void handleException(java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray addNewLog(android.content.Context,java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONArray: org.json.JSONObject optJSONObject(int)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONArray: org.json.JSONObject optJSONObject(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONArray: int length()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONArray: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONArray: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONArray: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.io.StringWriter: java.lang.String toString()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.io.StringWriter: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.io.StringWriter: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.io.StringWriter: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.io.PrintWriter: void &lt;init>(java.io.Writer)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.io.PrintWriter: void &lt;init>(java.io.Writer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: int getInt(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: int getInt(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray generalJSONLog(android.content.Context,org.json.JSONArray,java.lang.Throwable,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>-->&lt;org.json.JSONArray: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" target="&lt;org.json.JSONArray: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>-->&lt;org.json.JSONArray: java.lang.Object get(int)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" target="&lt;org.json.JSONArray: java.lang.Object get(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>-->&lt;org.json.JSONArray: int length()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" target="&lt;org.json.JSONArray: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>-->&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray removeJsonArrayByIndex(org.json.JSONArray,int)>" target="&lt;org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONArray: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;org.json.JSONArray: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: java.lang.Object get(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONArray: java.lang.Object get(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: int length()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONArray: int length()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: org.json.JSONObject optJSONObject(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONArray: org.json.JSONObject optJSONObject(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;org.json.JSONObject: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: int getInt(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: int getInt(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>-->&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" target="&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.lang.StringBuffer: java.lang.String toString()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.lang.StringBuffer: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.lang.StringBuffer: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.lang.StringBuffer: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.lang.String: void &lt;init>(byte[],int,int)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.lang.String: void &lt;init>(byte[],int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: org.json.JSONArray getLogs(android.content.Context)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.StringBuffer: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.StringBuffer: void &lt;init>()>-->&lt;java.lang.AbstractStringBuilder: void &lt;init>()>" source="&lt;java.lang.StringBuffer: void &lt;init>()>" target="&lt;java.lang.AbstractStringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.String: int length()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: int length()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[],int,int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: void &lt;init>(byte[],int,int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[],int,int)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.String: void &lt;init>(byte[],int,int)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;org.json.JSONArray: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>-->&lt;java.io.File: boolean delete()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushCrashHandler: void deleteCrashLog(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushCrashHandler: cn.jpush.android.api.JPushCrashHandler getInstance()>-->&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushCrashHandler: cn.jpush.android.api.JPushCrashHandler getInstance()>" target="&lt;cn.jpush.android.api.JPushCrashHandler: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.String generalExtraStr(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.nio.ByteBuffer get(java.nio.ByteBuffer,byte[],cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: int getInt(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.AckNormal: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Byte: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Byte: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Throwable: java.lang.Throwable fillInStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Byte: java.lang.Byte valueOf(byte)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Byte: java.lang.Byte valueOf(byte)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" source="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.ByteBufferUtils: void onException(java.lang.Throwable,cn.jpush.proto.common.commands.JResponse,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;java.lang.Byte: java.lang.Byte valueOf(byte)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Byte: java.lang.Byte valueOf(byte)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void error(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: short getShort(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: java.lang.Byte get(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>-->&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" target="&lt;cn.jpush.android.util.ByteBufferUtils: long getLong(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: java.lang.String getTlv2(java.nio.ByteBuffer,cn.jpush.proto.common.commands.JResponse)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void debug(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void debug(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.commands.JResponse: void parseBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] getBytesConsumed(java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void parseBody()>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] getBytesConsumed(java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: com.google.protobuf.jpush.ByteString getAppkey()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: com.google.protobuf.jpush.ByteString getAppkey()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: long getUid()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: long getUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: int getVer()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: int getVer()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: int getCmd()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: int getCmd()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDeleteMsgNoDisturbGlobal()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDeleteMsgNoDisturbGlobal()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getAddMsgNoDisturbGlobal()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getAddMsgNoDisturbGlobal()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDeleteMsgNoDisturbGroup()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDeleteMsgNoDisturbGroup()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getAddMsgNoDisturbGroup()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getAddMsgNoDisturbGroup()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDeleteMsgNoDisturbSingle()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDeleteMsgNoDisturbSingle()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getAddMsgNoDisturbSingle()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getAddMsgNoDisturbSingle()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$ReportInformation getReportInfo()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$ReportInformation getReportInfo()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelBlackList getDelBlacklist()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelBlackList getDelBlacklist()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddBlackList getAddBlacklist()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddBlackList getAddBlacklist()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventAnswer getEventAnswer()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventAnswer getEventAnswer()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventSync getEventSync()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventSync getEventSync()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$ChatMsgSync getChatMsg()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$ChatMsgSync getChatMsg()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventNotification getEventNotification()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$EventNotification getEventNotification()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$UpdateGroupInfo getUpdateGroupInfo()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$UpdateGroupInfo getUpdateGroupInfo()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$DelGroupMember getDelGroupMember()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$DelGroupMember getDelGroupMember()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$AddGroupMember getAddGroupMember()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$AddGroupMember getAddGroupMember()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$ExitGroup getExitGroup()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$ExitGroup getExitGroup()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$CreateGroup getCreateGroup()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Group$CreateGroup getCreateGroup()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$UpdateMemo getUpdateMemo()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$UpdateMemo getUpdateMemo()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelFriend getDelFriend()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$DelFriend getDelFriend()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddFriend getAddFriend()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Friend$AddFriend getAddFriend()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$GroupMsg getGroupMsg()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$GroupMsg getGroupMsg()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$SingleMsg getSingleMsg()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Message$SingleMsg getSingleMsg()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Logout getLogout()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Logout getLogout()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Login getLogin()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.User$Login getLogin()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$Response getCommonRep()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$Response getCommonRep()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody getBody()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody getBody()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead getHead()>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead getHead()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>-->&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void &lt;init>(byte[])>" target="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" source="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$Packet: void initFields()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>" source="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>-->&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>" target="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>-->&lt;cn.jpush.im.proto.Im$Cookie: cn.jpush.im.proto.Im$Cookie getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolHead: void initFields()>" target="&lt;cn.jpush.im.proto.Im$Cookie: cn.jpush.im.proto.Im$Cookie getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>" source="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$Cookie: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Im$Cookie: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Cookie: cn.jpush.im.proto.Im$Cookie getDefaultInstance()>-->&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Cookie: cn.jpush.im.proto.Im$Cookie getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Im$Cookie: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.User$Login: cn.jpush.im.proto.User$Login getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.User$Login: cn.jpush.im.proto.User$Login getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.User$Logout: cn.jpush.im.proto.User$Logout getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.User$Logout: cn.jpush.im.proto.User$Logout getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$SingleMsg: cn.jpush.im.proto.Message$SingleMsg getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$SingleMsg: cn.jpush.im.proto.Message$SingleMsg getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$GroupMsg: cn.jpush.im.proto.Message$GroupMsg getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$GroupMsg: cn.jpush.im.proto.Message$GroupMsg getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$AddFriend: cn.jpush.im.proto.Friend$AddFriend getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$AddFriend: cn.jpush.im.proto.Friend$AddFriend getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$DelFriend: cn.jpush.im.proto.Friend$DelFriend getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$DelFriend: cn.jpush.im.proto.Friend$DelFriend getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$UpdateMemo: cn.jpush.im.proto.Friend$UpdateMemo getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$UpdateMemo: cn.jpush.im.proto.Friend$UpdateMemo getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$CreateGroup: cn.jpush.im.proto.Group$CreateGroup getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$CreateGroup: cn.jpush.im.proto.Group$CreateGroup getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$ExitGroup: cn.jpush.im.proto.Group$ExitGroup getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$ExitGroup: cn.jpush.im.proto.Group$ExitGroup getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$AddGroupMember: cn.jpush.im.proto.Group$AddGroupMember getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$AddGroupMember: cn.jpush.im.proto.Group$AddGroupMember getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$DelGroupMember: cn.jpush.im.proto.Group$DelGroupMember getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$DelGroupMember: cn.jpush.im.proto.Group$DelGroupMember getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: cn.jpush.im.proto.Group$UpdateGroupInfo getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: cn.jpush.im.proto.Group$UpdateGroupInfo getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$EventSync: cn.jpush.im.proto.Message$EventSync getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$EventSync: cn.jpush.im.proto.Message$EventSync getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$EventAnswer: cn.jpush.im.proto.Message$EventAnswer getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$EventAnswer: cn.jpush.im.proto.Message$EventAnswer getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$AddBlackList: cn.jpush.im.proto.Friend$AddBlackList getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$AddBlackList: cn.jpush.im.proto.Friend$AddBlackList getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Friend$DelBlackList: cn.jpush.im.proto.Friend$DelBlackList getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Friend$DelBlackList: cn.jpush.im.proto.Friend$DelBlackList getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Im$Response: cn.jpush.im.proto.Im$Response getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Im$Response: cn.jpush.im.proto.Im$Response getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.User$ReportInformation: cn.jpush.im.proto.User$ReportInformation getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.User$ReportInformation: cn.jpush.im.proto.User$ReportInformation getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void initFields()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.User$Login: void initFields()>" source="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.User$Login: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.User$Login: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.User$Login: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Login: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.User$Login: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.User$Logout: void initFields()>" source="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.User$Logout: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.User$Logout: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.User$Logout: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Logout: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.User$Logout: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>" source="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>-->&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Message$SingleMsg: void initFields()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void initFields()>" source="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>" source="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>-->&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Message$GroupMsg: void initFields()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$AddFriend: void initFields()>" source="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$AddFriend: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$DelFriend: void initFields()>" source="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$DelFriend: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$UpdateMemo: void initFields()>" source="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$CreateGroup: void initFields()>" source="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$CreateGroup: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$ExitGroup: void initFields()>" source="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$ExitGroup: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>" source="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Group$AddGroupMember: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>" source="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Group$DelGroupMember: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void initFields()>" source="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$EventSync: void initFields()>" source="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$EventSync: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$EventSync: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$EventAnswer: void initFields()>" source="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$EventAnswer: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>" source="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Friend$AddBlackList: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>" source="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Friend$DelBlackList: void initFields()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$Response: void initFields()>" source="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$Response: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Im$Response: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Im$Response: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Response: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$Response: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.User$ReportInformation: void initFields()>" source="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.User$ReportInformation: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void initFields()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void initFields()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void initFields()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void initFields()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void initFields()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void initFields()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Login: cn.jpush.im.proto.User$Login getDefaultInstance()>-->&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.User$Login: cn.jpush.im.proto.User$Login getDefaultInstance()>" target="&lt;cn.jpush.im.proto.User$Login: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$Logout: cn.jpush.im.proto.User$Logout getDefaultInstance()>-->&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.User$Logout: cn.jpush.im.proto.User$Logout getDefaultInstance()>" target="&lt;cn.jpush.im.proto.User$Logout: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$SingleMsg: cn.jpush.im.proto.Message$SingleMsg getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$SingleMsg: cn.jpush.im.proto.Message$SingleMsg getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$SingleMsg: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$GroupMsg: cn.jpush.im.proto.Message$GroupMsg getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$GroupMsg: cn.jpush.im.proto.Message$GroupMsg getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$GroupMsg: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddFriend: cn.jpush.im.proto.Friend$AddFriend getDefaultInstance()>-->&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$AddFriend: cn.jpush.im.proto.Friend$AddFriend getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Friend$AddFriend: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelFriend: cn.jpush.im.proto.Friend$DelFriend getDefaultInstance()>-->&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$DelFriend: cn.jpush.im.proto.Friend$DelFriend getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Friend$DelFriend: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$UpdateMemo: cn.jpush.im.proto.Friend$UpdateMemo getDefaultInstance()>-->&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$UpdateMemo: cn.jpush.im.proto.Friend$UpdateMemo getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Friend$UpdateMemo: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$CreateGroup: cn.jpush.im.proto.Group$CreateGroup getDefaultInstance()>-->&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$CreateGroup: cn.jpush.im.proto.Group$CreateGroup getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Group$CreateGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$ExitGroup: cn.jpush.im.proto.Group$ExitGroup getDefaultInstance()>-->&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$ExitGroup: cn.jpush.im.proto.Group$ExitGroup getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Group$ExitGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$AddGroupMember: cn.jpush.im.proto.Group$AddGroupMember getDefaultInstance()>-->&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$AddGroupMember: cn.jpush.im.proto.Group$AddGroupMember getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Group$AddGroupMember: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$DelGroupMember: cn.jpush.im.proto.Group$DelGroupMember getDefaultInstance()>-->&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$DelGroupMember: cn.jpush.im.proto.Group$DelGroupMember getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Group$DelGroupMember: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: cn.jpush.im.proto.Group$UpdateGroupInfo getDefaultInstance()>-->&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: cn.jpush.im.proto.Group$UpdateGroupInfo getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Group$UpdateGroupInfo: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventSync: cn.jpush.im.proto.Message$EventSync getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventSync: cn.jpush.im.proto.Message$EventSync getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$EventSync: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventAnswer: cn.jpush.im.proto.Message$EventAnswer getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventAnswer: cn.jpush.im.proto.Message$EventAnswer getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$EventAnswer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$AddBlackList: cn.jpush.im.proto.Friend$AddBlackList getDefaultInstance()>-->&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$AddBlackList: cn.jpush.im.proto.Friend$AddBlackList getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Friend$AddBlackList: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Friend$DelBlackList: cn.jpush.im.proto.Friend$DelBlackList getDefaultInstance()>-->&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Friend$DelBlackList: cn.jpush.im.proto.Friend$DelBlackList getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Friend$DelBlackList: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Response: cn.jpush.im.proto.Im$Response getDefaultInstance()>-->&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Response: cn.jpush.im.proto.Im$Response getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Im$Response: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.User$ReportInformation: cn.jpush.im.proto.User$ReportInformation getDefaultInstance()>-->&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.User$ReportInformation: cn.jpush.im.proto.User$ReportInformation getDefaultInstance()>" target="&lt;cn.jpush.im.proto.User$ReportInformation: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: cn.jpush.im.proto.Message$AddMsgnoDisturbSingle getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbSingle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbSingle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: cn.jpush.im.proto.Message$AddMsgnoDisturbGroup getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGroup: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$AddMsgnoDisturbGlobal: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDefaultInstance()>-->&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Message$DeleteMsgnoDisturbGlobal: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet$Builder newBuilder()>" source="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet$Builder newBuilder()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet access$5000(cn.jpush.im.proto.Im$Packet$Builder)>" source="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet parseFrom(byte[])>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet access$5000(cn.jpush.im.proto.Im$Packet$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet$Builder newBuilder()>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder access$5100()>" source="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$Packet$Builder newBuilder()>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder access$5100()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder access$5100()>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder create()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder access$5100()>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder create()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder create()>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet$Builder create()>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: void maybeForceBuilderInitialization()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: void maybeForceBuilderInitialization()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolHead: cn.jpush.im.proto.Im$ProtocolHead getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Im$ProtocolBody: cn.jpush.im.proto.Im$ProtocolBody getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet access$5000(cn.jpush.im.proto.Im$Packet$Builder)>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet access$5000(cn.jpush.im.proto.Im$Packet$Builder)>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>-->&lt;cn.jpush.im.proto.Im$Packet: boolean isInitialized()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>" target="&lt;cn.jpush.im.proto.Im$Packet: boolean isInitialized()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>-->&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildParsed()>" target="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>-->&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" target="&lt;cn.jpush.im.proto.Im$Packet: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>-->&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder,cn.jpush.im.proto.Im$1)>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" target="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder,cn.jpush.im.proto.Im$1)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>-->&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead access$5302(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolHead)>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" target="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolHead access$5302(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolHead)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>-->&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody access$5402(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolBody)>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" target="&lt;cn.jpush.im.proto.Im$Packet: cn.jpush.im.proto.Im$ProtocolBody access$5402(cn.jpush.im.proto.Im$Packet,cn.jpush.im.proto.Im$ProtocolBody)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>-->&lt;cn.jpush.im.proto.Im$Packet: int access$5502(cn.jpush.im.proto.Im$Packet,int)>" source="&lt;cn.jpush.im.proto.Im$Packet$Builder: cn.jpush.im.proto.Im$Packet buildPartial()>" target="&lt;cn.jpush.im.proto.Im$Packet: int access$5502(cn.jpush.im.proto.Im$Packet,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder,cn.jpush.im.proto.Im$1)>-->&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder)>" source="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder,cn.jpush.im.proto.Im$1)>" target="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" source="&lt;cn.jpush.im.proto.Im$Packet: void &lt;init>(cn.jpush.im.proto.Im$Packet$Builder)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.utils.SimpleLog: void info(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.LoginResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.LoginResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.AckNormal: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.AckNormal: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.MessagePush: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.MessagePush: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" source="&lt;cn.jpush.proto.common.commands.IMResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(cn.jpush.proto.common.commands.JHead,java.nio.ByteBuffer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.JHead: long getJuid()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.JHead: long getJuid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.JHead: java.lang.Long getRid()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.JHead: java.lang.Long getRid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: cn.jpush.proto.common.commands.JHead getHead()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: cn.jpush.proto.common.commands.JHead getHead()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String getMsgContent()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String getMsgContent()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.MessagePush: int getMsgType()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: int getMsgType()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.MessagePush: long getMsgId()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: long getMsgId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.io.LineNumberReader: java.lang.String readLine()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.io.LineNumberReader: java.lang.String readLine()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.io.LineNumberReader: void &lt;init>(java.io.Reader)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.io.LineNumberReader: void &lt;init>(java.io.Reader)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.io.StringReader: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.io.StringReader: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.String: java.lang.String substring(int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.String: java.lang.String substring(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(long,long,int,java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(long,long,int,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parsePushMessage(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.JResponse)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String substring(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String substring(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(long,long,int,java.lang.String,int)>-->&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(int,int,long,long,int,java.lang.String)>" source="&lt;cn.jpush.proto.common.commands.TagaliasResponse: void &lt;init>(long,long,int,java.lang.String,int)>" target="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(int,int,long,long,int,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(int,int,long,long,int,java.lang.String)>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>" source="&lt;cn.jpush.proto.common.commands.JResponse: void &lt;init>(int,int,long,long,int,java.lang.String)>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>-->&lt;java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>" target="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>-->&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long,int,long)>" target="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.Configs: long getUid()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.Configs: long getUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.Configs: int getSid()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.Configs: int getSid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.service.PushProtocol: int MsgResponse(long,int,long,byte,long,long,int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.service.PushProtocol: int MsgResponse(long,int,long,byte,long,long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void reportReceived(long,int,long,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getUid()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: long getUid()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getUid()>-->&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: long getUid()>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: long getLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getSid()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: int getSid()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getSid()>-->&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: int getSid()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.TimeWatcher: void show()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.TimeWatcher: void show()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void parseNormal(android.content.Context,int,long,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;cn.jpush.android.util.TimeWatcher: void start()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;cn.jpush.android.util.TimeWatcher: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void show()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.TimeWatcher: void show()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void start()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void start()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void start()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.util.TimeWatcher: void start()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.TimeWatcher: void start()>" source="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.TimeWatcher: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.util.TimeWatcher: void &lt;init>(java.lang.String,java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.data.Entity: cn.jpush.android.data.Entity$EntityKey getEntityKey()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.data.Entity: cn.jpush.android.data.Entity$EntityKey getEntityKey()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: cn.jpush.android.data.Entity$EntityKey getEntityKey()>-->&lt;cn.jpush.android.data.Entity$EntityKey: void &lt;init>(cn.jpush.android.data.Entity,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.Entity: cn.jpush.android.data.Entity$EntityKey getEntityKey()>" target="&lt;cn.jpush.android.data.Entity$EntityKey: void &lt;init>(cn.jpush.android.data.Entity,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity$EntityKey: void &lt;init>(cn.jpush.android.data.Entity,cn.jpush.android.data.Entity)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.Entity$EntityKey: void &lt;init>(cn.jpush.android.data.Entity,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>-->&lt;java.util.LinkedList: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" target="&lt;java.util.LinkedList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.data.BasicEntity: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.data.BasicEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.BasicEntity: void &lt;init>()>-->&lt;cn.jpush.android.data.Entity: void &lt;init>()>" source="&lt;cn.jpush.android.data.BasicEntity: void &lt;init>()>" target="&lt;cn.jpush.android.data.Entity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.Entity: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuffer: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuffer: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuffer: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuffer: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>-->&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" target="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>-->&lt;java.util.HashMap: void &lt;init>()>" source="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" target="&lt;java.util.HashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>-->&lt;cn.jpush.android.Configs: long getUid()>" source="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" target="&lt;cn.jpush.android.Configs: long getUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>-->&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" source="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" target="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>-->&lt;java.lang.String: java.lang.String trim()>" source="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" target="&lt;java.lang.String: java.lang.String trim()>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String trim()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String trim()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getReportDesc(int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.data.ShowEntity$1: void run()>" source="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.data.ShowEntity$1: void &lt;init>(cn.jpush.android.data.ShowEntity,cn.jpush.android.data.ShowEntity,android.content.Context)>" source="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.data.ShowEntity$1: void &lt;init>(cn.jpush.android.data.ShowEntity,cn.jpush.android.data.ShowEntity,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;java.util.ArrayList: boolean isEmpty()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;java.util.ArrayList: boolean isEmpty()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void run()>-->&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" target="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.RequestingThread: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.RequestingThread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.os.HandlerThread: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.os.HandlerThread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.ShowEntity$1: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.ShowEntity$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.PkEntity$1: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.PkEntity$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger$1: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.PkEntity$2: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.PkEntity$2: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.JPushView$1: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.JPushView$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Thread: void run()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Thread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Thread: long getId()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Thread: long getId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper$1: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper$1: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Thread: java.lang.Thread currentThread()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Thread: java.lang.Thread currentThread()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;android.os.HandlerThread: void run()>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;android.os.HandlerThread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;java.lang.Thread: long getId()>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;java.lang.Thread: long getId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;java.lang.Thread: java.lang.Thread currentThread()>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;java.lang.Thread: java.lang.Thread currentThread()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Thread: long getId()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: long getId()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;java.lang.String: java.lang.String substring(int,int)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;java.lang.String: java.lang.String substring(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;java.lang.String: int lastIndexOf(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void run()>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$1: void run()>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String substring(int,int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String substring(int,int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: int lastIndexOf(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;java.lang.String: boolean matches(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;java.lang.String: boolean matches(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;java.lang.String: java.lang.String trim()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;java.lang.String: java.lang.String trim()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean matches(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean matches(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>-->&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.PkEntity: void postProcess(cn.jpush.android.data.PkEntity,android.content.Context)>" target="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>-->&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" target="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>-->&lt;java.util.Locale: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" target="&lt;java.util.Locale: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>-->&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" target="&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>-->&lt;java.util.Locale: java.util.Locale getDefault()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getConnectedTypeName(android.content.Context)>" target="&lt;java.util.Locale: java.util.Locale getDefault()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" source="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.net.URL: java.net.URLConnection openConnection()>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.net.URL: java.net.URLConnection openConnection()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.net.URL: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.net.URL: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.String: void &lt;init>(byte[],java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;java.lang.Thread: void sleep(long)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;java.lang.Thread: void sleep(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>-->&lt;java.io.ByteArrayOutputStream: void &lt;init>()>" source="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" target="&lt;java.io.ByteArrayOutputStream: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>-->&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()>" source="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" target="&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>-->&lt;java.io.ByteArrayOutputStream: void write(byte[],int,int)>" source="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" target="&lt;java.io.ByteArrayOutputStream: void write(byte[],int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.DefaultLogger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void sleep(long)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void sleep(long)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.DefaultLogger: void v(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean equals(java.lang.Object)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean equals(java.lang.Object)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;android.os.Build: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;android.os.Build: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.Integer: java.lang.String toString(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.Integer: java.lang.String toString(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: java.lang.String toString()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: java.lang.String toString()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Integer: java.lang.String toString(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Integer: java.lang.String toString(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>" source="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.String: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.String: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.String: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;java.util.ArrayList: java.util.Iterator iterator()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;java.util.ArrayList: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;java.util.ArrayList: int size()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;java.util.ArrayList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;java.lang.String: boolean startsWith(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;java.lang.String: boolean startsWith(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.Entity: boolean loadHtmlImageResources(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean startsWith(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean startsWith(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>-->&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" target="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.net.URL: java.net.URLConnection openConnection()>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.net.URL: java.net.URLConnection openConnection()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.net.URL: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.net.URL: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.StreamTool: byte[] readInputStream(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>-->&lt;java.lang.Thread: void sleep(long)>" source="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long)>" target="&lt;java.lang.Thread: void sleep(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>-->&lt;java.lang.String: java.lang.String substring(int,int)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" target="&lt;java.lang.String: java.lang.String substring(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>-->&lt;java.lang.String: int lastIndexOf(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" target="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean mkdir()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean mkdir()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.File: boolean createNewFile()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.File: boolean createNewFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.FileOutputStream: void flush()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.FileOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.FileOutputStream: void write(byte[])>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.FileOutputStream: void write(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.DefaultLogger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;android.app.IntentService: java.lang.String getPackageName()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;android.app.IntentService: java.lang.String getPackageName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean mkdirs()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean mkdirs()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>-->&lt;android.os.Environment: java.lang.String getExternalStorageState()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" target="&lt;android.os.Environment: java.lang.String getExternalStorageState()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;android.content.ContextWrapper: java.io.File getFilesDir()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;android.content.ContextWrapper: java.io.File getFilesDir()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.io.File: java.io.File[] listFiles()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.io.File: java.io.File[] listFiles()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils$1: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils$1: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteOldDir(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils$1: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils$1: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: boolean delete()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: java.lang.String[] list()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: java.lang.String[] list()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: boolean isFile()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: boolean isFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;java.io.File: void &lt;init>(java.io.File,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean deleteDirectory(java.io.File)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;android.content.ContextWrapper: java.io.File getFilesDir()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;android.content.ContextWrapper: java.io.File getFilesDir()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean mkdirs()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean mkdirs()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getRichStorageDir(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.String: byte[] getBytes(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.String: byte[] getBytes(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.File: boolean createNewFile()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.File: boolean createNewFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.FileOutputStream: void flush()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.FileOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.FileOutputStream: void write(byte[])>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.FileOutputStream: void write(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.FileUtil: boolean createHtmlFile(java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;java.lang.String: byte[] getBytes(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: byte[] getBytes(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.BufferedWriter: void close()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.BufferedWriter: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.File: java.lang.String getName()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.File: java.lang.String getName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.File: java.io.File getParentFile()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.File: java.io.File getParentFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.BufferedWriter: void write(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.BufferedWriter: void write(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.BufferedWriter: void &lt;init>(java.io.Writer)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.BufferedWriter: void &lt;init>(java.io.Writer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.FileWriter: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.FileWriter: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.util.ArrayList: void clear()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.util.ArrayList: void clear()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.util.ArrayList: java.util.Iterator iterator()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.util.ArrayList: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: java.util.ArrayList access$000()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: java.util.ArrayList access$000()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: void access$100()>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void access$100()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger$1: void run()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>-->&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" target="&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>-->&lt;java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>" source="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" target="&lt;java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>-->&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" target="&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>-->&lt;java.util.Date: void &lt;init>()>" source="&lt;cn.jpush.android.util.DateUtils: java.lang.String getTodayDateTimeForFilename()>" target="&lt;java.util.Date: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: java.util.ArrayList access$000()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: java.util.ArrayList access$000()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void access$100()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void access$100()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void access$100()>-->&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" source="&lt;cn.jpush.android.util.Logger: void access$100()>" target="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.io.File: boolean delete()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.io.File: java.lang.String getName()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.io.File: java.lang.String getName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.io.File: java.io.File[] listFiles()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.io.File: java.io.File[] listFiles()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.lang.String: java.lang.String substring(int,int)>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.lang.String: java.lang.String substring(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;cn.jpush.android.JPushConstants: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;cn.jpush.android.util.DateUtils: boolean isDaysAgo(java.util.Date,int)>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;cn.jpush.android.util.DateUtils: boolean isDaysAgo(java.util.Date,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void removeOldDebugLogFiles()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;cn.jpush.android.util.DateUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;java.text.SimpleDateFormat: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.DateUtils: java.util.Date parseDateInFilename(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DateUtils: boolean isDaysAgo(java.util.Date,int)>-->&lt;java.util.Calendar: java.util.Calendar getInstance()>" source="&lt;cn.jpush.android.util.DateUtils: boolean isDaysAgo(java.util.Date,int)>" target="&lt;java.util.Calendar: java.util.Calendar getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void run()>-->&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity$2: void run()>" target="&lt;cn.jpush.android.data.PkEntity: void access$000(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.HttpHelper: byte[] httpGet(java.lang.String,int,long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getStorageDir(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.FileUtil: boolean createImgFile(java.lang.String,byte[],android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.data.Entity: java.lang.String loadImgRes(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: java.lang.String httpSimpleGet(java.lang.String,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.HttpHelper: boolean checkHttpIsError(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.ShowEntity: void process(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.VideoEntity: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.VideoEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.UpdateEntity: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.UpdateEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseOriginalMsgMessage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>-->&lt;cn.jpush.android.data.Entity: void &lt;init>()>" source="&lt;cn.jpush.android.data.ShowEntity: void &lt;init>()>" target="&lt;cn.jpush.android.data.Entity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.UpdateEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent addFlags(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent addFlags(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.util.zip.Adler32: long getValue()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.util.zip.Adler32: long getValue()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.util.zip.Adler32: void update(byte[])>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.util.zip.Adler32: void update(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.util.zip.Adler32: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.util.zip.Adler32: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>-->&lt;java.lang.Math: int abs(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" target="&lt;java.lang.Math: int abs(int)>" type="directed" label=""/><edge id="&lt;java.lang.String: byte[] getBytes()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: byte[] getBytes()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.HashMap: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.HashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.Class: java.lang.String getCanonicalName()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Class: java.lang.String getCanonicalName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.LinkedList: java.lang.Object poll()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.LinkedList: java.lang.Object poll()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.LinkedList: int size()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.LinkedList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.LinkedList: boolean offer(java.lang.Object)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.LinkedList: boolean offer(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.LinkedList: boolean contains(java.lang.Object)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.LinkedList: boolean contains(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: java.lang.String getDeveloperArg0()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: java.lang.String getDeveloperArg0()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: java.lang.String getDeveloperArg0()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: java.lang.String getDeveloperArg0()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.app.PendingIntent: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.app.PendingIntent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiver(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.util.UUID: java.util.UUID randomUUID()>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.util.UUID: java.util.UUID randomUUID()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNotifiFlag(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNotifiFlag(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.Configs: int getNotificationMaxNum(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void deliveryDeveloperPushNotification(android.content.Context,int,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void resetNotificationParams(android.app.Notification)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification: void &lt;init>(int,java.lang.CharSequence,long)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification: void &lt;init>(int,java.lang.CharSequence,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;android.app.Notification: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;android.app.Notification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification buildNotification(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>-->&lt;android.widget.RemoteViews: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" target="&lt;android.widget.RemoteViews: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>-->&lt;android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" target="&lt;android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>-->&lt;android.widget.RemoteViews: void setImageViewResource(int,int)>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" target="&lt;android.widget.RemoteViews: void setImageViewResource(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>-->&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: android.widget.RemoteViews buildContentView(java.lang.String)>" target="&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>-->&lt;android.app.Notification$Builder: android.app.Notification build()>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" target="&lt;android.app.Notification$Builder: android.app.Notification build()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>-->&lt;android.app.Notification$Builder: android.app.Notification build()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: android.app.Notification getNotification(android.app.Notification$Builder)>" target="&lt;android.app.Notification$Builder: android.app.Notification build()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>-->&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>" target="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>-->&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void preBuild(java.lang.String,java.util.Map)>" target="&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>-->&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" target="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>-->&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" target="&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>-->&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" source="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" target="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>-->&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" target="&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>-->&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" target="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>-->&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" source="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>" target="&lt;java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushSA: void &lt;init>()>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.util.ArrayList: java.util.Iterator iterator()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.util.ArrayList: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.util.ArrayList: int size()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.util.ArrayList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.lang.String: boolean startsWith(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.lang.String: boolean startsWith(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void sendNotificationReceivedBroadcast(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.FileUtil: java.lang.String getFileNameFromUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>-->&lt;java.util.HashMap: java.util.Set keySet()>" source="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" target="&lt;java.util.HashMap: java.util.Set keySet()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>-->&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" source="&lt;cn.jpush.android.api.NotificationHelper: void putExtras(android.content.Intent,java.util.Map,int)>" target="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getPushNotificationBuilder(int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getCustomBuilder(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>-->&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: cn.jpush.android.api.PushNotificationBuilder parseFromPreference(java.lang.String)>" target="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.api.DefaultPushNotificationBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>-->&lt;java.lang.Integer: int parseInt(java.lang.String)>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" target="&lt;java.lang.Integer: int parseInt(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>-->&lt;java.lang.Integer: int parseInt(java.lang.String)>" source="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void fromPreferenceParams(java.lang.String[])>" target="&lt;java.lang.Integer: int parseInt(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Integer: int parseInt(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Integer: int parseInt(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.api.CustomPushNotificationBuilder: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.api.BasicPushNotificationBuilder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;cn.jpush.android.api.JPushInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;cn.jpush.android.api.JPushInterface: cn.jpush.android.api.PushNotificationBuilder getRecordPushNotificationBuilder(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.JPushInterface: boolean isValidNotificationBuilderId(int)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getSilencePushTime(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getSilencePushTime(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;java.util.Calendar: java.util.Calendar getInstance()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;java.util.Calendar: java.util.Calendar getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getSilencePushTime(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getSilencePushTime(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.DefaultLogger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent addFlags(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent addFlags(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPopWin(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isConnected(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.api.NotificationHelper: void showNotification(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.VideoEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isPackageExist(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isPackageExist(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: void process(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>-->&lt;cn.jpush.android.data.PkEntity$2: void &lt;init>(cn.jpush.android.data.PkEntity,android.content.Context,int,cn.jpush.android.data.PkEntity)>" source="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>" target="&lt;cn.jpush.android.data.PkEntity$2: void &lt;init>(cn.jpush.android.data.PkEntity,android.content.Context,int,cn.jpush.android.data.PkEntity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>-->&lt;cn.jpush.android.data.PkEntity$2: void run()>" source="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>" target="&lt;cn.jpush.android.data.PkEntity$2: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.data.PkEntity: void preloadLocalViewResouces(android.content.Context,int)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$2: void &lt;init>(cn.jpush.android.data.PkEntity,android.content.Context,int,cn.jpush.android.data.PkEntity)>-->&lt;java.lang.Thread: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity$2: void &lt;init>(cn.jpush.android.data.PkEntity,android.content.Context,int,cn.jpush.android.data.PkEntity)>" target="&lt;java.lang.Thread: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.Thread: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void start()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void start()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>-->&lt;cn.jpush.android.data.PkEntity$1: void &lt;init>(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context,int)>" source="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>" target="&lt;cn.jpush.android.data.PkEntity$1: void &lt;init>(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>-->&lt;cn.jpush.android.data.PkEntity$1: void run()>" source="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>" target="&lt;cn.jpush.android.data.PkEntity$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.data.PkEntity: void preLoadHtmlResources(android.content.Context,int)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$1: void &lt;init>(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context,int)>-->&lt;java.lang.Thread: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity$1: void &lt;init>(cn.jpush.android.data.PkEntity,cn.jpush.android.data.PkEntity,android.content.Context,int)>" target="&lt;java.lang.Thread: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" source="&lt;cn.jpush.android.data.Entity: boolean parse(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.UpdateEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.String: java.lang.String trim()>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.String: java.lang.String trim()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;java.lang.String: java.lang.String trim()>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;java.lang.String: java.lang.String trim()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void parse(org.json.JSONObject)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;org.json.JSONObject: boolean isNull(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;org.json.JSONObject: boolean isNull(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: org.json.JSONObject getJsonObject(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: boolean isNull(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: boolean isNull(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.VideoEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean checkValidUrl(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" source="&lt;cn.jpush.android.data.ShowEntity: boolean parseContent(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.CollectionUtil: java.util.ArrayList getListForJSONArray(org.json.JSONArray)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>-->&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>" source="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" target="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>-->&lt;cn.jpush.android.data.Entity: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" target="&lt;cn.jpush.android.data.Entity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.PkEntity$AShowInfo: void &lt;init>(cn.jpush.android.data.PkEntity)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.VideoEntity: void &lt;init>()>-->&lt;cn.jpush.android.data.Entity: void &lt;init>()>" source="&lt;cn.jpush.android.data.VideoEntity: void &lt;init>()>" target="&lt;cn.jpush.android.data.Entity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.UpdateEntity: void &lt;init>()>-->&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" source="&lt;cn.jpush.android.data.UpdateEntity: void &lt;init>()>" target="&lt;cn.jpush.android.data.PkEntity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ProtocolHelper$1: void &lt;init>(java.lang.String,android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void &lt;init>(java.lang.String,android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ProtocolHelper: void loadMsgJsonFromUrl(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void &lt;init>(java.lang.String,android.content.Context,java.lang.String)>-->&lt;java.lang.Thread: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ProtocolHelper$1: void &lt;init>(java.lang.String,android.content.Context,java.lang.String)>" target="&lt;java.lang.Thread: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;java.net.URL: java.lang.Object getContent()>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;java.net.URL: java.lang.Object getContent()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;java.net.URL: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;java.net.URL: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;cn.jpush.android.data.JPushView: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;cn.jpush.android.data.JPushView: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;android.view.View: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;android.view.View: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$002(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$002(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$102(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;cn.jpush.android.data.JPushView: android.graphics.Bitmap access$102(cn.jpush.android.data.JPushView,android.graphics.Bitmap)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView$1: void run()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.data.JPushView$1: void run()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.JPushView: void &lt;clinit>()>-->&lt;android.view.View: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.JPushView: void &lt;clinit>()>" target="&lt;android.view.View: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void run()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void run()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper$1: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper$1: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.ShowEntity$1: void &lt;init>(cn.jpush.android.data.ShowEntity,cn.jpush.android.data.ShowEntity,android.content.Context)>-->&lt;java.lang.Thread: void &lt;init>()>" source="&lt;cn.jpush.android.data.ShowEntity$1: void &lt;init>(cn.jpush.android.data.ShowEntity,cn.jpush.android.data.ShowEntity,android.content.Context)>" target="&lt;java.lang.Thread: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void processBasicEntity(android.content.Context,cn.jpush.android.data.BasicEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.Entity: boolean isRichPush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>-->&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" target="&lt;cn.jpush.android.helpers.PushMessageProcessor: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>-->&lt;com.google.gson.jpush.JsonParser: com.google.gson.jpush.JsonElement parse(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" target="&lt;com.google.gson.jpush.JsonParser: com.google.gson.jpush.JsonElement parse(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: long getRidFromTagaliasResponse(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: long optLong(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: long optLong(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: int optInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.api.JPushInterface$ErrorCode: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.api.JPushInterface$ErrorCode: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.PushMessageProcessor: void onRecvTagAliasCallBack(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: long optLong(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: long optLong(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.im.proto.Im$Response: int getCode()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.im.proto.Im$Response: int getCode()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: cn.jpush.im.proto.Im$Response getResponse()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: cn.jpush.im.proto.Im$Response getResponse()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: int getCommand()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: int getCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.commands.JHead: java.lang.Long getRid()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.commands.JHead: java.lang.Long getRid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: cn.jpush.proto.common.commands.JHead getHead()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: cn.jpush.proto.common.commands.JHead getHead()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.commands.IMResponse: cn.jpush.proto.common.imcommands.IMProtocol getIMProtocol()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.commands.IMResponse: cn.jpush.proto.common.imcommands.IMProtocol getIMProtocol()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>-->&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void handleImResponse(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.JResponse,byte[])>" target="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>-->&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" target="&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,byte[])>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>-->&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" target="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.Configs: void setImLoggedIn(boolean)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitBoolean(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.Configs: boolean isStopExecuted(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.Configs: boolean isStopExecuted(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void resetPushStatus(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setStopExecuted(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isStopExecuted(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.Configs: boolean isStopExecuted(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.service.ServiceInterface: int getStopType(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isUserInteraction()>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isUserInteraction()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>-->&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" source="&lt;cn.jpush.android.service.ServiceInterface: void stopPush(android.content.Context,int)>" target="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: boolean isUserInteraction()>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: boolean isUserInteraction()>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>-->&lt;android.content.ComponentName: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" target="&lt;android.content.ComponentName: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>-->&lt;android.content.ComponentName: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" target="&lt;android.content.ComponentName: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: void setEntity(java.lang.Object)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void setEntity(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.Object getEntity()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.Object getEntity()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification: long getGid()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: long getGid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification: long getFromUid()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: long getFromUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification: int getEventType()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: int getEventType()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification: long getEventId()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: long getEventId()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setGid(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setGid(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setFromUid(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setFromUid(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventType(int)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventType(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventId(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder setEventId(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification$Builder newBuilder()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification$Builder newBuilder()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendEventBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>" source="&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>" source="&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>-->&lt;java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>" target="&lt;java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>-->&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,long)>" source="&lt;cn.jpush.proto.common.commands.JPushProtocol: void &lt;init>(boolean,int,int,long)>" target="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,long)>-->&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" source="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,long)>" target="&lt;cn.jpush.proto.common.commands.JHead: void &lt;init>(boolean,int,int,int,long,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>-->&lt;cn.jpush.im.proto.Message$EventNotification: boolean isInitialized()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: boolean isInitialized()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification build()>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder,cn.jpush.im.proto.Message$1)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder,cn.jpush.im.proto.Message$1)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: long access$2402(cn.jpush.im.proto.Message$EventNotification,long)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2402(cn.jpush.im.proto.Message$EventNotification,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: int access$2502(cn.jpush.im.proto.Message$EventNotification,int)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: int access$2502(cn.jpush.im.proto.Message$EventNotification,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: long access$2602(cn.jpush.im.proto.Message$EventNotification,long)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2602(cn.jpush.im.proto.Message$EventNotification,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: long access$2702(cn.jpush.im.proto.Message$EventNotification,long)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: long access$2702(cn.jpush.im.proto.Message$EventNotification,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: java.util.List access$2802(cn.jpush.im.proto.Message$EventNotification,java.util.List)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: java.util.List access$2802(cn.jpush.im.proto.Message$EventNotification,java.util.List)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: com.google.protobuf.jpush.ByteString access$2902(cn.jpush.im.proto.Message$EventNotification,com.google.protobuf.jpush.ByteString)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: com.google.protobuf.jpush.ByteString access$2902(cn.jpush.im.proto.Message$EventNotification,com.google.protobuf.jpush.ByteString)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: int access$3002(cn.jpush.im.proto.Message$EventNotification,int)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3002(cn.jpush.im.proto.Message$EventNotification,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: int access$3102(cn.jpush.im.proto.Message$EventNotification,int)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3102(cn.jpush.im.proto.Message$EventNotification,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: int access$3202(cn.jpush.im.proto.Message$EventNotification,int)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3202(cn.jpush.im.proto.Message$EventNotification,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>-->&lt;cn.jpush.im.proto.Message$EventNotification: int access$3302(cn.jpush.im.proto.Message$EventNotification,int)>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification buildPartial()>" target="&lt;cn.jpush.im.proto.Message$EventNotification: int access$3302(cn.jpush.im.proto.Message$EventNotification,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder,cn.jpush.im.proto.Message$1)>-->&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder)>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder,cn.jpush.im.proto.Message$1)>" target="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" source="&lt;cn.jpush.im.proto.Message$EventNotification: void &lt;init>(cn.jpush.im.proto.Message$EventNotification$Builder)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification$Builder newBuilder()>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder access$2200()>" source="&lt;cn.jpush.im.proto.Message$EventNotification: cn.jpush.im.proto.Message$EventNotification$Builder newBuilder()>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder access$2200()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder access$2200()>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder create()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder access$2200()>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder create()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder create()>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: cn.jpush.im.proto.Message$EventNotification$Builder create()>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void maybeForceBuilderInitialization()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void maybeForceBuilderInitialization()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Message$EventNotification$Builder: void &lt;init>()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.util.ArrayList: java.util.Iterator iterator()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.util.ArrayList: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: void setEntity(java.lang.Object)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: void setEntity(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.Object getEntity()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.imcommands.IMProtocol: java.lang.Object getEntity()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List getChatMsgList()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List getChatMsgList()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromGid()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromGid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromUid()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: long getFromUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: int getMsgType()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: int getMsgType()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: long getMsgid()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: long getMsgid()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.proto.common.commands.IMRequest: void &lt;init>(long,cn.jpush.proto.common.imcommands.IMProtocol)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromGid(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromGid(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromUid(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setFromUid(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgType(int)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgType(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgid(long)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder setMsgid(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync$Builder newBuilder()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync$Builder newBuilder()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$ChatMsg$Builder newBuilder()>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$ChatMsg$Builder newBuilder()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" source="&lt;cn.jpush.proto.common.imcommands.ImResponseHelper: void sendChatMsgSyncBack(android.os.Handler,long,cn.jpush.proto.common.imcommands.IMProtocol)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: boolean isInitialized()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: boolean isInitialized()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg build()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder,cn.jpush.im.proto.Message$1)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder,cn.jpush.im.proto.Message$1)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3702(cn.jpush.im.proto.Message$ChatMsg,long)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3702(cn.jpush.im.proto.Message$ChatMsg,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3802(cn.jpush.im.proto.Message$ChatMsg,long)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3802(cn.jpush.im.proto.Message$ChatMsg,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3902(cn.jpush.im.proto.Message$ChatMsg,long)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: long access$3902(cn.jpush.im.proto.Message$ChatMsg,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4002(cn.jpush.im.proto.Message$ChatMsg,int)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4002(cn.jpush.im.proto.Message$ChatMsg,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$MessageContent access$4102(cn.jpush.im.proto.Message$ChatMsg,cn.jpush.im.proto.Message$MessageContent)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$MessageContent access$4102(cn.jpush.im.proto.Message$ChatMsg,cn.jpush.im.proto.Message$MessageContent)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4202(cn.jpush.im.proto.Message$ChatMsg,int)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4202(cn.jpush.im.proto.Message$ChatMsg,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4302(cn.jpush.im.proto.Message$ChatMsg,int)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4302(cn.jpush.im.proto.Message$ChatMsg,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4402(cn.jpush.im.proto.Message$ChatMsg,int)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: int access$4402(cn.jpush.im.proto.Message$ChatMsg,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>-->&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(boolean)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;clinit>()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>-->&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void initFields()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(boolean)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(boolean)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder,cn.jpush.im.proto.Message$1)>-->&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder,cn.jpush.im.proto.Message$1)>" target="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: void &lt;init>(cn.jpush.im.proto.Message$ChatMsg$Builder)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: com.google.protobuf.jpush.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.jpush.MessageLite)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: boolean isInitialized()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: boolean isInitialized()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync build()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder,cn.jpush.im.proto.Message$1)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder,cn.jpush.im.proto.Message$1)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>-->&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" target="&lt;java.util.Collections: java.util.List unmodifiableList(java.util.List)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List access$4802(cn.jpush.im.proto.Message$ChatMsgSync,java.util.List)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync buildPartial()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: java.util.List access$4802(cn.jpush.im.proto.Message$ChatMsgSync,java.util.List)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder,cn.jpush.im.proto.Message$1)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder,cn.jpush.im.proto.Message$1)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder)>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: void &lt;init>(cn.jpush.im.proto.Message$ChatMsgSync$Builder)>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite: void &lt;init>(com.google.protobuf.jpush.GeneratedMessageLite$Builder)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>-->&lt;java.lang.NullPointerException: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>" target="&lt;java.lang.NullPointerException: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void ensureChatMsgIsMutable()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder addChatMsg(cn.jpush.im.proto.Message$ChatMsg)>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void ensureChatMsgIsMutable()>" type="directed" label=""/><edge id="&lt;java.lang.NullPointerException: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.NullPointerException: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.NullPointerException: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>()>" source="&lt;java.lang.NullPointerException: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.RuntimeException: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.RuntimeException: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.RuntimeException: void &lt;init>()>-->&lt;java.lang.Exception: void &lt;init>()>" source="&lt;java.lang.RuntimeException: void &lt;init>()>" target="&lt;java.lang.Exception: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void ensureChatMsgIsMutable()>-->&lt;java.util.ArrayList: void &lt;init>(java.util.Collection)>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void ensureChatMsgIsMutable()>" target="&lt;java.util.ArrayList: void &lt;init>(java.util.Collection)>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync$Builder newBuilder()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder access$4600()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync: cn.jpush.im.proto.Message$ChatMsgSync$Builder newBuilder()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder access$4600()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder access$4600()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder create()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder access$4600()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder create()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder create()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: cn.jpush.im.proto.Message$ChatMsgSync$Builder create()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>-->&lt;java.util.Collections: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" target="&lt;java.util.Collections: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void maybeForceBuilderInitialization()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void maybeForceBuilderInitialization()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>-->&lt;java.util.Collections: java.util.List emptyList()>" source="&lt;cn.jpush.im.proto.Message$ChatMsgSync$Builder: void &lt;init>()>" target="&lt;java.util.Collections: java.util.List emptyList()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$ChatMsg$Builder newBuilder()>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder access$3500()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg: cn.jpush.im.proto.Message$ChatMsg$Builder newBuilder()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder access$3500()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder access$3500()>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder create()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder access$3500()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder create()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder create()>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: cn.jpush.im.proto.Message$ChatMsg$Builder create()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void maybeForceBuilderInitialization()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void maybeForceBuilderInitialization()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>-->&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" target="&lt;com.google.protobuf.jpush.GeneratedMessageLite$Builder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>-->&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" source="&lt;cn.jpush.im.proto.Message$ChatMsg$Builder: void &lt;init>()>" target="&lt;cn.jpush.im.proto.Message$MessageContent: cn.jpush.im.proto.Message$MessageContent getDefaultInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoggedIn(long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;android.os.Message: android.os.Message obtain(android.os.Handler,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" source="&lt;cn.jpush.android.service.NetworkingClient: void onLoginFailed(long,int)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionToHandler(android.os.Message,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramSocket: void close()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramSocket: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramSocket: void receive(java.net.DatagramPacket)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramSocket: void receive(java.net.DatagramPacket)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramSocket: void send(java.net.DatagramPacket)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramSocket: void send(java.net.DatagramPacket)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramSocket: void setSoTimeout(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramSocket: void setSoTimeout(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramSocket: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramSocket: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.util.ArrayList: java.lang.Object get(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.util.ArrayList: java.lang.Object get(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.String: void &lt;init>(byte[])>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.String: void &lt;init>(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramPacket: byte[] getData()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramPacket: byte[] getData()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramPacket: int getLength()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramPacket: int getLength()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramPacket: void &lt;init>(byte[],int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramPacket: void &lt;init>(byte[],int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.DatagramPacket: void &lt;init>(byte[],int,java.net.InetAddress,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.DatagramPacket: void &lt;init>(byte[],int,java.net.InetAddress,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.Configs: long getUid()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.Configs: long getUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo sendSis(android.content.Context,boolean,int,int)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>-->&lt;java.lang.Throwable: void &lt;init>()>" source="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Throwable: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[])>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: void &lt;init>(byte[])>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[])>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.String: void &lt;init>(byte[])>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>-->&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" target="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isConnectionTypeChanged(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>-->&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.Configs: boolean isSisRequestNeeded()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodSis()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;com.google.gson.jpush.JsonParser: com.google.gson.jpush.JsonElement parse(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;com.google.gson.jpush.JsonParser: com.google.gson.jpush.JsonElement parse(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;com.google.gson.jpush.JsonParser: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;com.google.gson.jpush.JsonParser: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.service.SisInfo: cn.jpush.android.service.SisInfo fromJson(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.service.SisInfo: cn.jpush.android.service.SisInfo fromJson(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>-->&lt;com.google.gson.jpush.Gson: void &lt;init>()>" source="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" target="&lt;com.google.gson.jpush.Gson: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>-->&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" source="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" target="&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.SisInfo: cn.jpush.android.service.SisInfo fromJson(java.lang.String)>-->&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.SisInfo: cn.jpush.android.service.SisInfo fromJson(java.lang.String)>" target="&lt;cn.jpush.android.service.SisInfo: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;java.lang.Thread: void join(long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;java.lang.Thread: void join(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: java.net.InetAddress getAddr()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void join(long)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void join(long)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void &lt;init>(java.lang.String)>-->&lt;java.lang.Thread: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper$CheckDnsThread: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Thread: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.String: java.lang.String substring(int,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.String: java.lang.String substring(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getNetworkType(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>-->&lt;java.lang.Integer: int parseInt(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: byte[] prepareSisSendBuffer(android.content.Context,java.lang.String,long)>" target="&lt;java.lang.Integer: int parseInt(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillStringData(byte[],java.lang.String,int)>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>-->&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] int2ByteArray(int)>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>" target="&lt;cn.jpush.proto.common.utils.ProtocolUtil: byte[] int2ByteArray(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;cn.jpush.proto.common.utils.ProtocolUtil: void fillIntData(byte[],int,int)>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: void setLastSisRequestNow()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo)>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>-->&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: int getLastGoodConnPort()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;cn.jpush.android.service.PushProtocol: int InitPush(long,java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;cn.jpush.android.service.PushProtocol: int InitPush(long,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;java.lang.Exception: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;java.lang.Exception: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.Configs: int getDefaultConnPort()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: int injectConnection(long,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: java.net.InetAddress resolveDns(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int openDefaultConnection(long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getDefaultConnIp()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>-->&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: int getDefaultConnPort()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setLastGoodConnIp(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void setLastGoodConnPort(int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getDeviceId()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getDeviceId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getRegId()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getRegId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getPassword()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String getPassword()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: long getJuid()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: long getJuid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.IMResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.MessagePush: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.TagaliasResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.AckNormal: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.JPushProtocol: int getCommand()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.RegisterResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.Configs: long getNextRid()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.Configs: long getNextRid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.service.PushProtocol: int RegPush(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.service.PushProtocol: int RegPush(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.service.PushProtocol: int RecvPush(long,byte[],int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.service.PushProtocol: int RecvPush(long,byte[],int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: boolean register(android.content.Context,long,boolean)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDID(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getImei(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;java.lang.String: boolean startsWith(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;java.lang.String: boolean startsWith(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;java.util.ArrayList: java.lang.Object get(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;java.util.ArrayList: java.lang.Object get(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;java.util.ArrayList: int size()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;java.util.ArrayList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;java.util.Locale: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;java.util.Locale: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;java.util.Locale: java.util.Locale getDefault()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;java.util.Locale: java.util.Locale getDefault()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDInternal(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>-->&lt;android.provider.Settings$Secure: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" target="&lt;android.provider.Settings$Secure: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>-->&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" target="&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isValidImei(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUDIDWithoutImei(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;android.os.Build: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;android.os.Build: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMacMD5(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.io.LineNumberReader: java.lang.String readLine()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.io.LineNumberReader: java.lang.String readLine()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.io.LineNumberReader: void &lt;init>(java.io.Reader)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.io.LineNumberReader: void &lt;init>(java.io.Reader)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;java.lang.Runtime: java.lang.Runtime getRuntime()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;java.lang.Runtime: java.lang.Runtime getRuntime()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.lang.String: char[] toCharArray()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.lang.String: char[] toCharArray()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.lang.StringBuffer: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.lang.StringBuffer: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.lang.StringBuffer: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.lang.StringBuffer: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;java.lang.Integer: java.lang.String toHexString(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;java.lang.Integer: java.lang.String toHexString(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Integer: java.lang.String toHexString(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Integer: java.lang.String toHexString(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getOldSavedKey(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getOldSavedKey(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String CheckSavedKey(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String CheckSavedKey(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getSavedUuid(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String CheckSavedKey(android.content.Context)>-->&lt;java.util.UUID: java.util.UUID randomUUID()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String CheckSavedKey(android.content.Context)>" target="&lt;java.util.UUID: java.util.UUID randomUUID()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getPushUdid(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean createNewFile()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean createNewFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.FileOutputStream: void flush()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.FileOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.FileOutputStream: void write(byte[])>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.FileOutputStream: void write(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.util.ArrayList: java.lang.Object get(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.util.ArrayList: java.lang.Object get(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.util.ArrayList: int size()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.util.ArrayList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getStringUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getUdidFilePath()>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.io.InputStreamReader: void close()>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.io.InputStreamReader: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream,java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.io.BufferedReader: void close()>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.io.BufferedReader: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.io.BufferedReader: java.lang.String readLine()>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.io.BufferedReader: java.lang.String readLine()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader,int)>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setPushUdid(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>-->&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" target="&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>-->&lt;java.lang.StringBuffer: java.lang.String toString()>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" target="&lt;java.lang.StringBuffer: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>-->&lt;java.lang.StringBuffer: void &lt;init>(int)>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" target="&lt;java.lang.StringBuffer: void &lt;init>(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>-->&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String toHex(byte[])>" target="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>-->&lt;java.lang.String: char charAt(int)>" source="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" target="&lt;java.lang.String: char charAt(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>-->&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" source="&lt;cn.jpush.android.util.StringUtils: void appendHex(java.lang.StringBuffer,byte)>" target="&lt;java.lang.StringBuffer: java.lang.StringBuffer append(char)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setImei(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getApkVersion(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;android.os.Build: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;android.os.Build: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;java.lang.Integer: java.lang.String toString(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;java.lang.Integer: java.lang.String toString(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.service.SystemPropertiesProxy: java.lang.String get(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getChannel()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getClientInfo(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isSystemInstall(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWidthHeight(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;android.os.Build: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;android.os.Build: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: java.lang.String getRegistrationExtKey(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;java.lang.Enum: int ordinal()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;java.lang.Enum: int ordinal()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;java.util.UUID: java.util.UUID randomUUID()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;java.util.UUID: java.util.UUID randomUUID()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getMD5String(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;clinit>()>-->&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;clinit>()>" target="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;init>(java.lang.String,int)>-->&lt;java.lang.Enum: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.util.AndroidUtil$DeviceID_Status: void &lt;init>(java.lang.String,int)>" target="&lt;java.lang.Enum: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getDeviceId()>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>-->&lt;android.provider.Settings$System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" target="&lt;android.provider.Settings$System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>-->&lt;android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" target="&lt;android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIDFromSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.File: boolean createNewFile()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.File: boolean createNewFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.File: boolean delete()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.File: boolean mkdir()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.File: boolean mkdir()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.FileOutputStream: void flush()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.FileOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.FileOutputStream: void write(byte[])>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.FileOutputStream: void write(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdtoSd(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getExternalSdDataPath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromExternalStorage(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.util.ArrayList: java.lang.Object get(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.util.ArrayList: java.lang.Object get(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.util.ArrayList: int size()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.util.ArrayList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceidFilePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.FileUtil: java.util.ArrayList readLines(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceIdFromSD()>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>-->&lt;android.provider.Settings$System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" target="&lt;android.provider.Settings$System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>-->&lt;android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" target="&lt;android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setMainImei(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setMainAndroidId(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setMainMac(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getNextRid()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: long getNextRid()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getNextRid()>-->&lt;cn.jpush.android.Configs: long getStartRid()>" source="&lt;cn.jpush.android.Configs: long getNextRid()>" target="&lt;cn.jpush.android.Configs: long getStartRid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getNextRid()>-->&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: long getNextRid()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: long getLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getNextRid()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: long getNextRid()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getStartRid()>-->&lt;java.lang.Math: int abs(int)>" source="&lt;cn.jpush.android.Configs: long getStartRid()>" target="&lt;java.lang.Math: int abs(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getStartRid()>-->&lt;java.util.Random: int nextInt(int)>" source="&lt;cn.jpush.android.Configs: long getStartRid()>" target="&lt;java.util.Random: int nextInt(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: long getStartRid()>-->&lt;java.util.Random: void &lt;init>()>" source="&lt;cn.jpush.android.Configs: long getStartRid()>" target="&lt;java.util.Random: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void saveDeviceIdFromServer(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: boolean checkContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.SharePreferenceProcess: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.SharePreferenceProcess: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void handleRegisterError(android.content.Context,int,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.StatusCode: java.lang.String getErrorDesc(int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>-->&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>" source="&lt;cn.jpush.android.Configs: void setHeartbeatIntervalOneDay()>" target="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void setHeartbeatInterval(int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>-->&lt;java.io.ByteArrayInputStream: void &lt;init>(byte[])>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" target="&lt;java.io.ByteArrayInputStream: void &lt;init>(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>-->&lt;java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" target="&lt;java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>-->&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: int getInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: int getServerTime()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: int getServerTime()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: int getSid()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: int getSid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.proto.common.commands.LoginResponse: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.Configs: long getUid()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.Configs: long getUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.StringUtils: java.lang.String toMD5(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.Configs: long getNextRid()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.Configs: long getNextRid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: short getIMLoginFlag()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: short getIMLoginFlag()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.service.PushProtocol: int LogPush(long,long,byte[],long,java.lang.String,java.lang.String,long,short)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.service.PushProtocol: int LogPush(long,long,byte[],long,java.lang.String,java.lang.String,long,short)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.proto.common.commands.JCommands: cn.jpush.proto.common.commands.JResponse parseResponseInbound(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.Configs: void setSid(int)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.Configs: void setSid(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: int login(android.content.Context,long)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>-->&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>" target="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>-->&lt;java.lang.Integer: int parseInt(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: int getVersionFromString(java.lang.String)>" target="&lt;java.lang.Integer: int parseInt(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDBData: int getCount_10()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_10()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDBData: int getCount_3_10()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_3_10()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1_3()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1_3()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDBData: int getCount_1()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDBData: int getTotal()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDBData: int getTotal()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDBData: int getFailed()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDBData: int getFailed()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: void close()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getCurrentNetType(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.Configs: java.lang.String getLastGoodConnIp()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.IndexStats: void insertData(android.content.Context,int,long,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: long insertData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;android.content.ContentValues: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;android.content.ContentValues: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setCount_10(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_10(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setCount_3_10(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_3_10(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1_3(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1_3(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setCount_1(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setTotal(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setTotal(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setFailed(int)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setFailed(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setSt_source(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_source(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setSt_local_dns(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_local_dns(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setSt_conn_ip(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_conn_ip(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setSt_net(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_net(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void setSt_sort(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void setSt_sort(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.data.StatisticsDBData: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.data.StatisticsDBData: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDBData getStatisticsData(android.database.Cursor)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.data.StatisticsDBData: java.lang.String toString()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDBData: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDBData: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>-->&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" target="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.StatisticsDB: android.database.Cursor getDataBySortkey(java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean isExist(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>-->&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>" target="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>-->&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean open(boolean)>" target="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openWritableDatabase()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.StatisticsDB: boolean openReadableDataBase()>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>-->&lt;java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" target="&lt;java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getPhoneIp()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>-->&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>" target="&lt;cn.jpush.android.data.StatisticsDB: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>-->&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.data.StatisticsDB: cn.jpush.android.data.StatisticsDB getInstance(android.content.Context)>" target="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.data.StatisticsDB: void &lt;init>(android.content.Context)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" source="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>-->&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" source="&lt;cn.jpush.android.data.StatisticsDB$DBHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" target="&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setSid(int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setSid(int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setSid(int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void setSid(int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.Configs: void setLoginServerTime(long)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;org.json.JSONObject: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;org.json.JSONObject: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendServerTimer(android.content.Context,long)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.NetworkingClient: void &lt;init>(android.content.Context,android.os.Handler,boolean)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.NetworkingClient: void &lt;init>(android.content.Context,android.os.Handler,boolean)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onBackground()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onBackground()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onBackground()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onBackground()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onForeground()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onForeground()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onForeground()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onForeground()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;android.os.Handler: void removeMessages(int)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;android.os.Handler: void removeMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;android.os.Handler: boolean hasMessages(int)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;android.os.Handler: boolean hasMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.NetworkingClient: void tryStop()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;android.app.Service: void stopSelf()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;android.app.Service: void stopSelf()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void handleStopPush(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>-->&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" source="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" target="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>-->&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" source="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>-->&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void onDisconnected()>" target="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollLast()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollLast()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.util.concurrent.LinkedBlockingDeque: int size()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.util.concurrent.LinkedBlockingDeque: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;android.os.Handler: void removeMessages(int)>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;android.os.Handler: void removeMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void restoreSentQueue()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;java.util.concurrent.ConcurrentHashMap: int size()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;java.util.concurrent.ConcurrentHashMap: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingCache()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;java.util.concurrent.LinkedBlockingDeque: java.util.Iterator iterator()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;java.util.concurrent.LinkedBlockingDeque: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;java.util.concurrent.LinkedBlockingDeque: int size()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;java.util.concurrent.LinkedBlockingDeque: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void printRequestingQueue()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ConnectionState: void &lt;init>(java.lang.String,int)>-->&lt;java.lang.Enum: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.service.ConnectionState: void &lt;init>(java.lang.String,int)>" target="&lt;java.lang.Enum: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" source="&lt;cn.jpush.android.helpers.ConnectingHelper: void sendConnectionChanged(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>-->&lt;cn.jpush.android.service.ConnectionState: cn.jpush.android.service.ConnectionState valueOf(java.lang.String)>" source="&lt;cn.jpush.android.Configs: cn.jpush.android.service.ConnectionState getConnectionState(android.content.Context)>" target="&lt;cn.jpush.android.service.ConnectionState: cn.jpush.android.service.ConnectionState valueOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ConnectionState: cn.jpush.android.service.ConnectionState valueOf(java.lang.String)>-->&lt;java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>" source="&lt;cn.jpush.android.service.ConnectionState: cn.jpush.android.service.ConnectionState valueOf(java.lang.String)>" target="&lt;java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.Configs: void setConnectionState(android.content.Context,cn.jpush.android.service.ConnectionState)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;android.os.Handler: void removeMessages(int)>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;android.os.Handler: void removeMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;cn.jpush.android.service.PushService: void restartNetworkingClient()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;cn.jpush.android.service.PushService: boolean isTimeoutNeedRestart()>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;cn.jpush.android.service.PushService: boolean isTimeoutNeedRestart()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;cn.jpush.android.service.PushService: boolean isConnecting()>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;cn.jpush.android.util.Logger: void vv(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void restartThenHeartbeat()>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>-->&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>" target="&lt;cn.jpush.android.service.NetworkingClient: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>-->&lt;java.util.concurrent.atomic.AtomicLong: long get()>" source="&lt;cn.jpush.android.service.PushService: boolean isConnecting()>" target="&lt;java.util.concurrent.atomic.AtomicLong: long get()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.commands.TagaliasRequest: void &lt;init>(long,java.lang.String,java.lang.String)>-->&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>" source="&lt;cn.jpush.proto.common.commands.TagaliasRequest: void &lt;init>(long,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.proto.common.commands.JRequest: void &lt;init>(int,int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>-->&lt;com.google.gson.jpush.GsonBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>" target="&lt;com.google.gson.jpush.GsonBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>-->&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>" source="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: cn.jpush.proto.common.imcommands.ImBaseRequest fromJson(java.lang.String,int)>" target="&lt;cn.jpush.proto.common.imcommands.ImBaseRequest: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.service.WakelockManager: android.os.PowerManager$WakeLock getWakelock()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.service.WakelockManager: android.os.PowerManager$WakeLock getWakelock()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.service.WakelockManager: void setWakelock(android.os.PowerManager$WakeLock)>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.service.WakelockManager: void setWakelock(android.os.PowerManager$WakeLock)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void acquiredWakelock(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>-->&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" target="&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>-->&lt;cn.jpush.android.service.WakelockManager: void &lt;init>()>" source="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" target="&lt;cn.jpush.android.service.WakelockManager: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.WakelockManager: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.WakelockManager: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.service.WakelockManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.service.WakelockManager: android.os.PowerManager$WakeLock getWakelock()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.service.WakelockManager: android.os.PowerManager$WakeLock getWakelock()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.service.WakelockManager: cn.jpush.android.service.WakelockManager getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void releaseWakelock()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.PushService: void resetAlarm()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.PushService: void initService()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.PushService: void initService()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;android.app.Service: void onCreate()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;android.app.Service: void onCreate()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.helpers.MultiStubHelper: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.helpers.MultiStubHelper: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;java.lang.Thread: long getId()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;java.lang.Thread: long getId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.PushService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;java.lang.Thread: java.lang.Thread currentThread()>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;java.lang.Thread: java.lang.Thread currentThread()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void onCreate()>-->&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" source="&lt;cn.jpush.android.service.PushService: void onCreate()>" target="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>-->&lt;java.lang.Thread: void run()>" source="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" target="&lt;java.lang.Thread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>-->&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" source="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" target="&lt;java.lang.Thread: void &lt;init>(java.lang.Runnable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>-->&lt;cn.jpush.android.service.PushService$1: void &lt;init>(cn.jpush.android.service.PushService,long)>" source="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" target="&lt;cn.jpush.android.service.PushService$1: void &lt;init>(cn.jpush.android.service.PushService,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void startOtherAppService(long)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService$1: void &lt;init>(cn.jpush.android.service.PushService,long)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService$1: void &lt;init>(cn.jpush.android.service.PushService,long)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;android.app.PendingIntent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;android.app.PendingIntent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;cn.jpush.android.Configs: int getHeartbeatInterval()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void resetAlarm()>-->&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.service.PushService: void resetAlarm()>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void initService()>-->&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" source="&lt;cn.jpush.android.service.PushService: void initService()>" target="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;android.os.HandlerThread: android.os.Looper getLooper()>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;android.os.HandlerThread: android.os.Looper getLooper()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;cn.jpush.android.service.RequestingThread: void run()>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;cn.jpush.android.service.RequestingThread: void run()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;java.lang.Thread: void start()>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;java.lang.Thread: void start()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;android.os.HandlerThread: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;android.os.HandlerThread: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init>()>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;java.util.concurrent.ConcurrentHashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>-->&lt;java.util.concurrent.LinkedBlockingDeque: void &lt;init>()>" source="&lt;cn.jpush.android.service.RequestingThread: void &lt;init>(android.content.Context,android.os.Handler)>" target="&lt;java.util.concurrent.LinkedBlockingDeque: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>-->&lt;java.lang.ref.WeakReference: void &lt;init>(java.lang.Object)>" source="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>" target="&lt;java.lang.ref.WeakReference: void &lt;init>(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>-->&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" source="&lt;cn.jpush.android.service.RequestingThread$MyHandler: void &lt;init>(android.os.Looper,cn.jpush.android.service.RequestingThread)>" target="&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;java.util.concurrent.atomic.AtomicBoolean: boolean get()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;java.util.concurrent.atomic.AtomicBoolean: boolean get()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.Configs: long getUid()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.Configs: long getUid()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getPassword()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isDebuggable(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void registerCallback(android.app.Application)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void registerCallback(android.app.Application)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: void initNetSetting()>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void initNetSetting()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>-->&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" source="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>-->&lt;java.util.HashMap: void &lt;init>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" target="&lt;java.util.HashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;java.lang.String: boolean startsWith(java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;java.lang.String: boolean startsWith(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.DeviceInfoUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.DeviceInfoUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: java.lang.String getVersion()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: java.lang.String getVersion()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.DeviceInfoUtil: java.lang.String getVersion(android.content.Context)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.DeviceInfoUtil: java.lang.String getVersion(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.util.DeviceInfoUtil: void setVersion(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.util.DeviceInfoUtil: void setVersion(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>-->&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void handleUpgrade(android.content.Context)>" target="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DeviceInfoUtil: void &lt;clinit>()>-->&lt;java.lang.Class: java.lang.String getSimpleName()>" source="&lt;cn.jpush.android.util.DeviceInfoUtil: void &lt;clinit>()>" target="&lt;java.lang.Class: java.lang.String getSimpleName()>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.String getSimpleName()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.String getSimpleName()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getSdkVersion()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setSdkVersion(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" source="&lt;cn.jpush.android.helpers.VersionHelper: void onUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getRegistrationId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDeviceId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.VersionHelper: boolean copyRegisterUserInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setRegisteredUserInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setSilencePushTime(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setPushTime(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setNotificationMaxNum(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" source="&lt;cn.jpush.android.Configs: void copyDataOnUpgradeFromVersionOne(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setServiceStopedFlag(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitInt(android.content.Context,java.lang.String,int)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void commitLong(android.content.Context,java.lang.String,long)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: void commitString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;cn.jpush.android.service.PushProtocol: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;cn.jpush.android.service.PushProtocol: int GetSdkVersion()>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;cn.jpush.android.service.PushProtocol: int GetSdkVersion()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean checkSoVersion()>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.JPush: android.content.pm.ApplicationInfo getAppInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.DefaultLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>-->&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" source="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String,java.lang.Throwable)>" target="&lt;cn.jpush.android.util.Logger: boolean isServerEnabled(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: void getVersionForApp(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.lang.String: java.lang.String toLowerCase(java.util.Locale)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.util.Locale: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.util.Locale: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setRegisterCode(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;java.util.Locale: java.util.Locale getDefault()>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;java.util.Locale: java.util.Locale getDefault()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>-->&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>" source="&lt;cn.jpush.android.JPush: boolean getMetadata(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>-->&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" source="&lt;cn.jpush.android.util.StringUtils: java.lang.String filterSpecialCharacter(java.lang.String)>" target="&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: void setChannel(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void commitString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: void registerCallback(android.app.Application)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: void registerCallback(android.app.Application)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void initNetSetting()>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void initNetSetting()>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void initNetSetting()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void initNetSetting()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void initNetSetting()>-->&lt;java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: void initNetSetting()>" target="&lt;java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.JPush: void bindService(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidRunning(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;java.lang.Class: java.lang.String getCanonicalName()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;java.lang.Class: java.lang.String getCanonicalName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;java.util.ArrayList: java.util.Iterator iterator()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;java.util.ArrayList: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermission(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean checkValidManifest(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceResolves(android.content.Context,java.lang.Class)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;android.content.ComponentName: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;android.content.ComponentName: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;android.content.ComponentName: void &lt;init>(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;android.content.ComponentName: void &lt;init>(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isMultiProcess(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasServiceIntentFilter(android.content.Context,java.lang.String,boolean)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverResolves(android.content.Context,java.lang.Class)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;android.content.IntentFilter: void addDataScheme(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;android.content.IntentFilter: void addDataScheme(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;android.content.IntentFilter: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;android.content.IntentFilter: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;android.content.IntentFilter: void addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;android.content.IntentFilter: void addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;android.content.IntentFilter: void setPriority(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;android.content.IntentFilter: void setPriority(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.service.PushReceiver: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.service.PushReceiver: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;android.content.IntentFilter: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;android.content.IntentFilter: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void registerPushReceiver(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>-->&lt;android.content.BroadcastReceiver: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushReceiver: void &lt;init>()>" target="&lt;android.content.BroadcastReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilterPackage(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityResolves(android.content.Context,java.lang.Class)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasActivityIntentFilter(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasPermissionDefined(android.content.Context,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.Configs: java.lang.String getAppKey()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.Configs: void setAppKey(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean hasValidAppKey()>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.Configs: void clearRegistered()>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void clearRegistered()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" source="&lt;cn.jpush.android.helpers.ServiceHelper: void checkAppkeyChanged(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>-->&lt;java.lang.Class: java.lang.String getSimpleName()>" source="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" target="&lt;java.lang.Class: java.lang.String getSimpleName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getRegisteredAppKey()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;cn.jpush.android.Configs: void setUid(java.lang.Long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;cn.jpush.android.Configs: void setPassword(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;cn.jpush.android.Configs: void setRegistrationId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;cn.jpush.android.Configs: void setDeviceId(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: void clearRegistered()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void removeKey(java.lang.String)>" source="&lt;cn.jpush.android.Configs: void clearRegistered()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void removeKey(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.BasePreferenceManager: void removeKey(java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.BasePreferenceManager: void removeKey(java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" source="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>" source="&lt;cn.jpush.android.util.ReportUtils: void clearReportLogFile(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;java.lang.String: byte[] getBytes(java.lang.String)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;java.lang.String: byte[] getBytes(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.ReportUtils: void close(java.io.Closeable)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.ReportUtils: void close(java.io.Closeable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>-->&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" source="&lt;cn.jpush.android.util.ReportUtils: void clearHistotyFileContent(android.content.Context)>" target="&lt;cn.jpush.android.util.ReportUtils: boolean writeLogFile(android.content.Context,java.lang.String,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getImei(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getAndroidId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getWifiMac(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: void clearRegistered()>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: void clearRegistered()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>-->&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void checkDeviceInfo(android.content.Context)>" target="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;java.lang.String: boolean isEmpty()>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;java.lang.String: boolean isEmpty()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isFirstInstallNewVersion()>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean isEmpty()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean isEmpty()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>-->&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" target="&lt;cn.jpush.android.util.BasePreferenceManager: java.lang.String getString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>-->&lt;java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" target="&lt;java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: int getImeiType(java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainMac()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeTwo(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIDToSettings(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void clearDeviceId(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String writeDeviceIdToExternalStorage(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainImei()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.Configs: java.lang.String getMainAndroidId()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: boolean isSameDeviceJudgeOne(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.MultiStubHelper: void &lt;init>(android.content.Context)>-->&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.MultiStubHelper: void &lt;init>(android.content.Context)>" target="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>-->&lt;android.os.Binder: void &lt;init>()>" source="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>" target="&lt;android.os.Binder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>-->&lt;android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>" source="&lt;cn.jpush.android.IDataShare$Stub: void &lt;init>()>" target="&lt;android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>-->&lt;java.lang.ref.WeakReference: void &lt;init>(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>" target="&lt;java.lang.ref.WeakReference: void &lt;init>(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>-->&lt;android.os.Handler: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService$MyHandler: void &lt;init>(cn.jpush.android.service.PushService)>" target="&lt;android.os.Handler: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushService: void &lt;init>()>-->&lt;android.app.Service: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushService: void &lt;init>()>" target="&lt;android.app.Service: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;java.util.HashMap: boolean containsKey(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.JPushSA: boolean isStatEnable()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.JPushSA: boolean isStatEnable()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$100()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$100()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$202(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$202(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$102(boolean)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$102(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$300()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$300()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityResumed(android.app.Activity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$100()>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$100()>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$202(java.lang.String)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$202(java.lang.String)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$102(boolean)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: boolean access$102(boolean)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$300()>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$300()>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;java.lang.String: int hashCode()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;java.lang.String: int hashCode()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification: void &lt;init>(int,java.lang.CharSequence,long)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification: void &lt;init>(int,java.lang.CharSequence,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.PendingIntent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.PendingIntent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.Notification: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.Notification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" source="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;java.lang.String: int hashCode()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: int hashCode()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.JPushSA: boolean isStatEnable()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.JPushSA: boolean isStatEnable()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.JPushSA: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$302(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$302(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$000()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$000()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$002(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.JPushSA: cn.jpush.android.api.JPushSA getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.util.HashMap access$400()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$200()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$500()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void showPermanentNotification(android.content.Context,java.lang.String,java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks$1: void onActivityPaused(android.app.Activity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$302(java.lang.String)>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$302(java.lang.String)>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$000()>-->&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.LifeCycleCallbacks: java.lang.String access$000()>" target="&lt;cn.jpush.android.api.LifeCycleCallbacks: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>-->&lt;android.app.Activity: void onDestroy()>" source="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>" target="&lt;android.app.Activity: void onDestroy()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>-->&lt;android.os.Handler: void removeMessages(int)>" source="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>" target="&lt;android.os.Handler: void removeMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>-->&lt;android.os.Handler: boolean hasMessages(int)>" source="&lt;cn.jpush.android.ui.PushActivity: void onDestroy()>" target="&lt;android.os.Handler: boolean hasMessages(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onPause()>-->&lt;android.app.Activity: void onPause()>" source="&lt;cn.jpush.android.ui.PushActivity: void onPause()>" target="&lt;android.app.Activity: void onPause()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>-->&lt;android.app.Activity: void finish()>" source="&lt;cn.jpush.android.ui.PushActivity: void onBackPressed()>" target="&lt;android.app.Activity: void finish()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onResume()>-->&lt;android.app.Activity: void onResume()>" source="&lt;cn.jpush.android.ui.PushActivity: void onResume()>" target="&lt;android.app.Activity: void onResume()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;android.app.Activity: void finish()>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;android.app.Activity: void finish()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;android.app.Activity: android.content.Intent getIntent()>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;android.app.Activity: android.content.Intent getIntent()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;android.app.Activity: void onCreate(android.os.Bundle)>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;android.app.Activity: void onCreate(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>-->&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.ui.PushActivity: void onCreate(android.os.Bundle)>" target="&lt;cn.jpush.android.util.Logger: void ee(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;android.app.Activity: void finish()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;android.app.Activity: void finish()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;android.os.Message: void &lt;init>()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;android.os.Message: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;android.os.Message: void &lt;clinit>()>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;android.os.Message: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.ui.PushActivity: void processEntity(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelNotification(android.content.Context,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>-->&lt;cn.jpush.android.ui.PushActivity$1: void &lt;init>(cn.jpush.android.ui.PushActivity)>" source="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>" target="&lt;cn.jpush.android.ui.PushActivity$1: void &lt;init>(cn.jpush.android.ui.PushActivity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>-->&lt;android.app.Activity: void &lt;init>()>" source="&lt;cn.jpush.android.ui.PushActivity: void &lt;init>()>" target="&lt;android.app.Activity: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.ui.PushActivity$1: void &lt;init>(cn.jpush.android.ui.PushActivity)>-->&lt;android.os.Handler: void &lt;init>()>" source="&lt;cn.jpush.android.ui.PushActivity$1: void &lt;init>(cn.jpush.android.ui.PushActivity)>" target="&lt;android.os.Handler: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>-->&lt;android.app.IntentService: void onDestroy()>" source="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>" target="&lt;android.app.IntentService: void onDestroy()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void onDestroy()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;android.os.Handler: boolean sendEmptyMessage(int)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;android.os.Handler: boolean sendEmptyMessage(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadService$1: void &lt;init>(cn.jpush.android.service.DownloadService,boolean,int)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadService$1: void &lt;init>(cn.jpush.android.service.DownloadService,boolean,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;java.lang.Thread: void setPriority(int)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;java.lang.Thread: void setPriority(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;android.os.Environment: java.lang.String getExternalStorageState()>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;android.os.Environment: java.lang.String getExternalStorageState()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>-->&lt;java.lang.Thread: java.lang.Thread currentThread()>" source="&lt;cn.jpush.android.service.DownloadService: void onHandleIntent(android.content.Intent)>" target="&lt;java.lang.Thread: java.lang.Thread currentThread()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" source="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService: boolean isSlt(cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.IntentService: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.IntentService: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.IntentService: java.lang.String getPackageName()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.IntentService: java.lang.String getPackageName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.widget.RemoteViews: void setImageViewResource(int,int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.widget.RemoteViews: void setImageViewResource(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.PendingIntent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.PendingIntent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.widget.RemoteViews: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.widget.RemoteViews: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.Notification: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.Notification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>-->&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadingNotification(cn.jpush.android.data.Entity,int,long,long)>" target="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;android.content.ContextWrapper: android.os.Looper getMainLooper()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;android.content.ContextWrapper: android.os.Looper getMainLooper()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.service.DownloadControl$DownloadHandler: void &lt;init>(cn.jpush.android.service.DownloadControl,android.os.Looper,cn.jpush.android.service.DownloadControl$DownloadListener)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.service.DownloadControl$DownloadHandler: void &lt;init>(cn.jpush.android.service.DownloadControl,android.os.Looper,cn.jpush.android.service.DownloadControl$DownloadListener)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>-->&lt;java.lang.Thread: void sleep(long)>" source="&lt;cn.jpush.android.service.DownloadControl: void &lt;init>(android.content.Context,cn.jpush.android.data.Entity,android.os.Bundle,cn.jpush.android.service.DownloadControl$DownloadListener,int)>" target="&lt;java.lang.Thread: void sleep(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;android.os.Bundle: void remove(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;android.os.Bundle: void remove(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;android.os.Bundle: void putLong(java.lang.String,long)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;android.os.Bundle: void putLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;android.os.Bundle: long getLong(java.lang.String,long)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;android.os.Bundle: long getLong(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadControl: int getBestRetryTimes(long)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadControl: int getBestRetryTimes(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: boolean delete()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: long length()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: long length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: boolean createNewFile()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: boolean createNewFile()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: void &lt;init>(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: void &lt;init>(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.BufferedInputStream: int read(byte[])>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.BufferedInputStream: int read(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File,boolean)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.BufferedOutputStream: void flush()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.BufferedOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryRichPush(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.service.DownloadControl: int download(android.content.Context,cn.jpush.android.service.DownloadControl$DownloadListener,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>-->&lt;java.io.BufferedOutputStream: void close()>" source="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>" target="&lt;java.io.BufferedOutputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>-->&lt;java.io.BufferedInputStream: void close()>" source="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>" target="&lt;java.io.BufferedInputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;cn.jpush.android.service.DownloadControl: void closeResource(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,java.net.HttpURLConnection)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>-->&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>" target="&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>-->&lt;java.lang.Long: java.lang.Long valueOf(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: long getFileLengthFromHttp(java.net.HttpURLConnection)>" target="&lt;java.lang.Long: java.lang.Long valueOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>-->&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.JPushException: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Exception: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Long: java.lang.Long valueOf(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Long: java.lang.Long valueOf(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;cn.jpush.android.util.HttpHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;java.net.URL: java.net.URLConnection openConnection()>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;java.net.URL: java.net.URLConnection openConnection()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;java.net.URL: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;java.net.URL: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>-->&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>" source="&lt;cn.jpush.android.service.DownloadControl: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,long)>" target="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.HttpHelper: void addHttpURLConnectRequestProperty(java.net.HttpURLConnection,boolean)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>-->&lt;java.io.File: boolean mkdirs()>" source="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" target="&lt;java.io.File: boolean mkdirs()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadControl: void createSavePath(java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.service.DownloadService: cn.jpush.android.data.Entity access$000(cn.jpush.android.service.DownloadService)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.service.DownloadService: cn.jpush.android.data.Entity access$000(cn.jpush.android.service.DownloadService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.service.DownloadService: android.os.Handler access$200(cn.jpush.android.service.DownloadService)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.service.DownloadService: android.os.Handler access$200(cn.jpush.android.service.DownloadService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>-->&lt;cn.jpush.android.service.DownloadService: void access$300(cn.jpush.android.service.DownloadService,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadSucceed(java.lang.String,boolean)>" target="&lt;cn.jpush.android.service.DownloadService: void access$300(cn.jpush.android.service.DownloadService,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void access$300(cn.jpush.android.service.DownloadService,cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.service.DownloadService: void access$300(cn.jpush.android.service.DownloadService,cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;android.app.IntentService: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;android.app.IntentService: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;android.app.IntentService: android.content.pm.PackageManager getPackageManager()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;android.app.IntentService: android.content.pm.PackageManager getPackageManager()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcastToApp(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: boolean isNeedSDownload(boolean,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadSucceed(cn.jpush.android.data.Entity)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;android.app.IntentService: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;android.app.IntentService: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent getIntentForStartPushActivity(android.content.Context,cn.jpush.android.data.Entity,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void downloadEndNotification(cn.jpush.android.data.Entity,boolean)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.widget.RemoteViews: void &lt;init>(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.PendingIntent: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.PendingIntent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.widget.RemoteViews: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.widget.RemoteViews: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.Notification: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.Notification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isInSilencePushTime(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNotifiFlag(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNotifiFlag(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>-->&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" source="&lt;cn.jpush.android.api.NotificationHelper: android.app.Notification getDefaultNotification(android.content.Context,int,android.content.Intent,cn.jpush.android.data.Entity,boolean,boolean)>" target="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.util.HashMap: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.util.HashMap: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>()>" source="&lt;java.lang.NullPointerException: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,cn.jpush.android.data.Entity,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.ContentValues: void put(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.ContentValues: void &lt;init>()>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.ContentValues: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.content.ContentValues: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.content.ContentValues: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" source="&lt;cn.jpush.android.data.DbHelper: void updateUpTable(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: void &lt;init>(android.content.Context)>-->&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" source="&lt;cn.jpush.android.data.DbHelper: void &lt;init>(android.content.Context)>" target="&lt;android.database.sqlite.SQLiteOpenHelper: void &lt;init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addFlags(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addFlags(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.net.Uri: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.net.Uri: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>-->&lt;android.net.Uri: android.net.Uri fromFile(java.io.File)>" source="&lt;cn.jpush.android.util.AndroidUtil: void installPackage(android.content.Context,java.lang.String)>" target="&lt;android.net.Uri: android.net.Uri fromFile(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryAppPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;java.lang.String: int lastIndexOf(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: boolean mkdirs()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: boolean mkdirs()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: java.lang.String getName()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: java.lang.String getName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: java.io.File[] listFiles()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: java.io.File[] listFiles()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.util.ArrayList: java.lang.Object get(int)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.util.ArrayList: java.lang.Object get(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.util.ArrayList: int size()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.util.ArrayList: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>-->&lt;java.util.UUID: java.util.UUID randomUUID()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" target="&lt;java.util.UUID: java.util.UUID randomUUID()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;android.app.IntentService: java.lang.String getPackageName()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;android.app.IntentService: java.lang.String getPackageName()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.io.File: boolean mkdirs()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.io.File: boolean mkdirs()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isSdcardExist()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;android.os.Environment: java.io.File getExternalStorageDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String addFileSeparatorAtLast(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDir(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" source="&lt;cn.jpush.android.util.DirectoryUtils: java.lang.String getDirectoryVideoPath(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void createPath(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String)>-->&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String)>" target="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>-->&lt;java.lang.String: java.lang.String substring(int,int)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: java.lang.String substring(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>-->&lt;java.lang.String: int lastIndexOf(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" target="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: java.lang.String getExtName(java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;java.io.File: long length()>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;java.io.File: long length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>-->&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" source="&lt;cn.jpush.android.util.CheckSumUntil: boolean checkMd5(java.lang.String,java.io.File)>" target="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;java.lang.String: java.lang.String substring(int)>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;java.lang.String: java.lang.String substring(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>-->&lt;java.lang.Integer: java.lang.String toString(int,int)>" source="&lt;cn.jpush.android.util.CheckSumUntil: java.lang.String getMD5Checksum(java.io.File)>" target="&lt;java.lang.Integer: java.lang.String toString(int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>-->&lt;java.io.FileInputStream: void close()>" source="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" target="&lt;java.io.FileInputStream: void close()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>-->&lt;java.io.FileInputStream: int read(byte[])>" source="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" target="&lt;java.io.FileInputStream: int read(byte[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>-->&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" source="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" target="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>-->&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" source="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" target="&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.CheckSumUntil: byte[] createChecksum(java.io.File)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;java.lang.Integer: java.lang.String toString(int,int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Integer: java.lang.String toString(int,int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.service.DownloadService: android.app.NotificationManager access$400(cn.jpush.android.service.DownloadService)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.service.DownloadService: android.app.NotificationManager access$400(cn.jpush.android.service.DownloadService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.service.DownloadControl: boolean isRealFailed(int)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.service.DownloadControl: boolean isRealFailed(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.service.DownloadService: cn.jpush.android.data.Entity access$000(cn.jpush.android.service.DownloadService)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.service.DownloadService: cn.jpush.android.data.Entity access$000(cn.jpush.android.service.DownloadService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.util.AndroidUtil: java.lang.String getDownloadFailedClientInfo(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgActionResult(java.lang.String,int,java.lang.String,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>-->&lt;cn.jpush.android.service.DownloadService: void access$500(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.service.DownloadService$1: void onDownloadFailed(int)>" target="&lt;cn.jpush.android.service.DownloadService: void access$500(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void access$500(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" source="&lt;cn.jpush.android.service.DownloadService: void access$500(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.IntentService: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.IntentService: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification getNotification()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification$Builder: void &lt;init>(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.PendingIntent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.PendingIntent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.os.Build$VERSION: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.os.Build$VERSION: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.Notification: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.Notification: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.service.DownloadControl: boolean isRealFailed(int)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.service.DownloadControl: boolean isRealFailed(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>-->&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" source="&lt;cn.jpush.android.service.DownloadService: void downFailNotification(int,cn.jpush.android.data.Entity,int)>" target="&lt;cn.jpush.android.api.NotificationHelper: void methodInvokeNoti(android.app.Notification,android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadControl$DownloadHandler: void &lt;init>(cn.jpush.android.service.DownloadControl,android.os.Looper,cn.jpush.android.service.DownloadControl$DownloadListener)>-->&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" source="&lt;cn.jpush.android.service.DownloadControl$DownloadHandler: void &lt;init>(cn.jpush.android.service.DownloadControl,android.os.Looper,cn.jpush.android.service.DownloadControl$DownloadListener)>" target="&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$1: void &lt;init>(cn.jpush.android.service.DownloadService,boolean,int)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService$1: void &lt;init>(cn.jpush.android.service.DownloadService,boolean,int)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Thread: void setPriority(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Thread: void setPriority(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;android.app.IntentService: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;android.app.IntentService: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;android.app.IntentService: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;android.app.IntentService: void onCreate()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;android.app.IntentService: void onCreate()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.service.DownloadService$ToastHandler: void &lt;init>(cn.jpush.android.service.DownloadService,android.content.Context)>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.service.DownloadService$ToastHandler: void &lt;init>(cn.jpush.android.service.DownloadService,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;java.util.HashMap: int size()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;java.util.HashMap: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.api.NotificationHelper: java.util.HashMap getResourceId(java.lang.String,java.lang.String[])>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.service.DownloadService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$ToastHandler: void &lt;init>(cn.jpush.android.service.DownloadService,android.content.Context)>-->&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" source="&lt;cn.jpush.android.service.DownloadService$ToastHandler: void &lt;init>(cn.jpush.android.service.DownloadService,android.content.Context)>" target="&lt;android.os.Handler: void &lt;init>(android.os.Looper)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>-->&lt;android.app.IntentService: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" target="&lt;android.app.IntentService: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>-->&lt;cn.jpush.android.service.DownloadService$2: void &lt;init>(cn.jpush.android.service.DownloadService)>" source="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" target="&lt;cn.jpush.android.service.DownloadService$2: void &lt;init>(cn.jpush.android.service.DownloadService)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>-->&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" source="&lt;cn.jpush.android.service.DownloadService: void &lt;init>()>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService$2: void &lt;init>(cn.jpush.android.service.DownloadService)>-->&lt;android.os.Handler: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService$2: void &lt;init>(cn.jpush.android.service.DownloadService)>" target="&lt;android.os.Handler: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onDestroy()>-->&lt;android.app.Service: void onDestroy()>" source="&lt;cn.jpush.android.service.DaemonService: void onDestroy()>" target="&lt;android.app.Service: void onDestroy()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: int onStartCommand(android.content.Intent,int,int)>-->&lt;android.app.Service: int onStartCommand(android.content.Intent,int,int)>" source="&lt;cn.jpush.android.service.DaemonService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;android.app.Service: int onStartCommand(android.content.Intent,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>-->&lt;android.app.Service: void onCreate()>" source="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" target="&lt;android.app.Service: void onCreate()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>-->&lt;android.app.Service: android.content.Context getApplicationContext()>" source="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" target="&lt;android.app.Service: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void onCreate()>-->&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" source="&lt;cn.jpush.android.service.DaemonService: void onCreate()>" target="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.os.BaseBundle: void putInt(java.lang.String,int)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.os.BaseBundle: void putInt(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DaemonService: void &lt;init>()>-->&lt;android.app.Service: void &lt;init>()>" source="&lt;cn.jpush.android.service.DaemonService: void &lt;init>()>" target="&lt;android.app.Service: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void setPushReceiverEnable(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.AlarmReceiver: void &lt;init>()>-->&lt;android.content.BroadcastReceiver: void &lt;init>()>" source="&lt;cn.jpush.android.service.AlarmReceiver: void &lt;init>()>" target="&lt;android.content.BroadcastReceiver: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.BroadcastReceiver: void abortBroadcast()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.BroadcastReceiver: void abortBroadcast()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.os.Bundle getExtras()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.os.Bundle getExtras()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: int getIntExtra(java.lang.String,int)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: int getIntExtra(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent addFlags(int)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent addFlags(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: java.lang.String getDataString()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: java.lang.String getDataString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: java.lang.String getAction()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: java.lang.String getAction()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: java.lang.String substring(int)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: java.lang.String substring(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: boolean startsWith(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: boolean startsWith(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: java.lang.String trim()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: java.lang.String trim()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: boolean equals(java.lang.Object)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: boolean equals(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.StatusCode: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.net.Uri: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.net.Uri: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadControl: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.net.NetworkInfo$State: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.net.NetworkInfo$State: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void ww(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.JPush: boolean init(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void rtcWithDelayTime(android.content.Context,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.helpers.ReportHelper: void reportMsgResult(java.lang.String,int,android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void e(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.net.Uri: android.net.Uri fromFile(java.io.File)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.net.Uri: android.net.Uri fromFile(java.io.File)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: cn.jpush.android.data.BasicEntity preParseOriginalMsgMessage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.helpers.ProtocolHelper: void parseMsgMessage(android.content.Context,cn.jpush.android.data.BasicEntity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.AndroidUtil: boolean hasReceiverIntentFilter(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>-->&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" source="&lt;cn.jpush.android.service.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>" target="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.style.ForegroundColorSpan: void &lt;init>(int)>" source="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.style.ForegroundColorSpan: void &lt;init>(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.String: int length()>" source="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.String: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>" source="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-->&lt;android.text.SpannableStringBuilder: void &lt;init>(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.PushReceiver: android.text.SpannableStringBuilder getSpan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;android.text.SpannableStringBuilder: void &lt;init>(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>-->&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" target="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>-->&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: void deleteMsgData(android.content.Context)>" target="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>-->&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" source="&lt;cn.jpush.android.util.DirectoryUtils: boolean checkPushDataDirName(java.lang.String)>" target="&lt;java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>-->&lt;java.io.File: boolean delete()>" source="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>-->&lt;java.io.File: java.io.File[] listFiles()>" source="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" target="&lt;java.io.File: java.io.File[] listFiles()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>-->&lt;java.io.File: boolean isDirectory()>" source="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" target="&lt;java.io.File: boolean isDirectory()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.FileUtil: void deepDeleteFile(java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.DbHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;java.lang.String: boolean endsWith(java.lang.String)>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;java.lang.String: boolean endsWith(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" source="&lt;cn.jpush.android.data.DbHelper: java.lang.String delUpTableForAppId(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.data.DbHelper: cn.jpush.android.data.DbHelper getSQLiteDBHelper(android.content.Context)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean endsWith(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean endsWith(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageAddedReportContent(java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;org.json.JSONObject: int length()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;org.json.JSONObject: int length()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.Configs: boolean isValidRegistered()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.helpers.ReportHelper: void reportOperation(android.content.Context,org.json.JSONObject)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: int length()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: int length()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setFlags(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setFlags(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent findLaunchIntentForActivity(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.AndroidUtil: android.content.Intent findLaunchIntentForActivity(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean startNewPK(android.content.Context,java.lang.String,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.JPush: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.JPush: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.api.NotificationHelper: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" source="&lt;cn.jpush.android.api.NotificationHelper: void cancelAllNotification(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.api.NotificationHelper: int getNofiticationID(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>-->&lt;android.text.TextUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" target="&lt;android.text.TextUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>-->&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" source="&lt;cn.jpush.android.service.StatusCode: org.json.JSONObject buildPackageRemovedReportContent(java.lang.String)>" target="&lt;android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: void rtc(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.BasePreferenceManager: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.String: java.lang.String[] split(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.Integer: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.Integer: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.Configs: boolean isNotificationEnabled(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.Configs: boolean isNotificationEnabled(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void ii(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.Configs: java.lang.String getPushTime(android.content.Context)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.Configs: java.lang.String getPushTime(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.util.Calendar: java.util.Calendar getInstance()>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.util.Calendar: java.util.Calendar getInstance()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.String: java.lang.String valueOf(char)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.String: java.lang.String valueOf(char)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>-->&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: boolean isInValidPushTime(android.content.Context)>" target="&lt;java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: boolean isNotificationEnabled(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" source="&lt;cn.jpush.android.Configs: boolean isNotificationEnabled(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: boolean getBoolean(android.content.Context,java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.Configs: java.lang.String getPushTime(android.content.Context)>-->&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.Configs: java.lang.String getPushTime(android.content.Context)>" target="&lt;cn.jpush.android.helpers.MultiSpHelper: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String valueOf(char)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String valueOf(char)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>-->&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context)>" target="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setFlags(int)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setFlags(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: android.content.Intent setPackage(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;android.content.Intent: void &lt;init>(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;android.content.Intent: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.StringUtils: boolean isEmpty(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>-->&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void startMainActivity(android.content.Context,java.lang.String)>" target="&lt;cn.jpush.android.util.Logger: void i(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkDisconnected(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;org.json.JSONObject: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;org.json.JSONObject: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;org.json.JSONObject: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;org.json.JSONObject: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.Logger: void dd(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.AndroidUtil: void sendBroadcast(android.content.Context,java.lang.String,android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>-->&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.util.AndroidUtil: void sendNetworkChangedToIM(android.content.Context,boolean)>" target="&lt;cn.jpush.android.util.Logger: void w(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.content.Intent: void &lt;init>(android.content.Context,java.lang.Class)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.os.Bundle: void &lt;init>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.os.Bundle: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;java.lang.Enum: java.lang.String name()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;java.lang.Enum: java.lang.String name()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.content.Intent: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.content.Intent: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;android.os.Bundle: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;android.os.Bundle: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;cn.jpush.android.service.ConnectionState: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" source="&lt;cn.jpush.android.service.ServiceInterface: void networkConnected(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: boolean isServiceStoped(android.content.Context)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" source="&lt;cn.jpush.android.service.DownloadService: boolean hasDownladTask()>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;cn.jpush.android.service.DownloadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.util.concurrent.ConcurrentLinkedQueue: int size()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.util.ArrayList: java.util.Iterator iterator()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.util.ArrayList: java.util.Iterator iterator()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.util.ArrayList: boolean add(java.lang.Object)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.util.ArrayList: boolean add(java.lang.Object)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;java.util.ArrayList: void &lt;init>()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;java.util.ArrayList: void &lt;init>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;cn.jpush.android.service.ServiceInterface: void executeDownload(android.content.Context,cn.jpush.android.data.Entity)>" type="directed" label=""/><edge id="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>-->&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" source="&lt;cn.jpush.android.service.DownloadService: void startDownloadTasks(android.content.Context)>" target="&lt;cn.jpush.android.util.Logger: void v(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onDestroy()>-->&lt;android.app.Service: void onDestroy()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onDestroy()>" target="&lt;android.app.Service: void onDestroy()>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>-->&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>-->&lt;com.airbnb.android.aireventlogger.LogAir: void uploadAirEventsAsync()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: int onStartCommand(android.content.Intent,int,int)>" target="&lt;com.airbnb.android.aireventlogger.LogAir: void uploadAirEventsAsync()>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>-->&lt;java.lang.Class: java.lang.String getSimpleName()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" target="&lt;java.lang.Class: java.lang.String getSimpleName()>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>-->&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" target="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>-->&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" target="&lt;android.app.Service: java.lang.Object getSystemService(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>-->&lt;android.app.Service: void onCreate()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" target="&lt;android.app.Service: void onCreate()>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>-->&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void onCreate()>" target="&lt;android.util.Log: int d(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;init>()>-->&lt;android.app.Service: void &lt;init>()>" source="&lt;com.airbnb.android.aireventlogger.AirEventUploadService: void &lt;init>()>" target="&lt;android.app.Service: void &lt;init>()>" type="directed" label=""/></edges></graph></gexf>
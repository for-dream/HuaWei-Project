<?xml version='1.0' encoding='UTF-8'?><gexf xmlns="http://www.gexf.net/1.2draft" xmlns:viz="http://www.gexf.net/1.2draft/viz" version="1.2"><meta><creator>wwr</creator><description>App method invoke graph</description></meta><graph defaultedgetype="directed" idtype="string" mode="static"><attributes class="node" mode="static"><attribute id="0" title="codeArray" type="string"/></attributes><nodes count="120"><node id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" label="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" label="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: void &lt;clinit>()>" label="&lt;a.auu.a: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: java.lang.String c(java.lang.String)>" label="&lt;a.auu.a: java.lang.String c(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;init>(byte[])>" label="&lt;java.lang.String: void &lt;init>(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" label="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Exception: void &lt;init>()>" label="&lt;java.lang.Exception: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: void &lt;init>()>" label="&lt;java.lang.Throwable: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Object: void &lt;init>()>" label="&lt;java.lang.Object: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Object: void finalize()>" label="&lt;java.lang.Object: void finalize()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>" label="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: byte[] getBytes()>" label="&lt;java.lang.String: byte[] getBytes()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int)>" label="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" label="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void &lt;clinit>()>" label="&lt;java.lang.System: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: boolean ooo0ooo0o0o0(byte[],int,int,boolean)>" label="&lt;a.auu.a: boolean ooo0ooo0o0o0(byte[],int,int,boolean)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: void ooo0oo00000oo000o(int,byte[])>" label="&lt;a.auu.a: void ooo0oo00000oo000o(int,byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" label="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" label="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;a.auu.a: void &lt;init>()>" label="&lt;a.auu.a: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: void &lt;clinit>()>" label="&lt;java.lang.String: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" label="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Application: void attachBaseContext(android.content.Context)>" label="&lt;android.app.Application: void attachBaseContext(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" label="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.String toString()>" label="&lt;java.lang.StringBuilder: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: void &lt;init>()>" label="&lt;java.lang.StringBuilder: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: void &lt;init>(java.lang.String)>" label="&lt;java.io.File: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: java.lang.String getAbsolutePath()>" label="&lt;java.io.File: java.lang.String getAbsolutePath()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void close()>" label="&lt;java.io.FileOutputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>" label="&lt;java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" label="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>" label="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>" label="&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>" label="&lt;java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>" label="&lt;java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Long: void &lt;clinit>()>" label="&lt;java.lang.Long: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: void &lt;clinit>()>" label="&lt;java.io.File: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: long currentTimeMillis()>" label="&lt;java.lang.System: long currentTimeMillis()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Long: java.lang.Long valueOf(long)>" label="&lt;java.lang.Long: java.lang.Long valueOf(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean exists()>" label="&lt;java.io.File: boolean exists()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: java.lang.String getMessage()>" label="&lt;java.lang.Throwable: java.lang.String getMessage()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" label="&lt;com.netease.nis.wrapper.MyJni: boolean a()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.os.Build: void &lt;clinit>()>" label="&lt;android.os.Build: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: boolean contains(java.lang.CharSequence)>" label="&lt;java.lang.String: boolean contains(java.lang.CharSequence)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.RandomAccessFile: java.lang.String readLine()>" label="&lt;java.io.RandomAccessFile: java.lang.String readLine()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.RandomAccessFile: void &lt;init>(java.lang.String,java.lang.String)>" label="&lt;java.io.RandomAccessFile: void &lt;init>(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.ZipFile: void close()>" label="&lt;java.util.zip.ZipFile: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" label="&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" label="&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: void printStackTrace()>" label="&lt;java.lang.Throwable: void printStackTrace()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>" label="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean mkdir()>" label="&lt;java.io.File: boolean mkdir()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: void close()>" label="&lt;java.io.BufferedInputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>" label="&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileInputStream: void close()>" label="&lt;java.io.FileInputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" label="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void &lt;init>(java.lang.String)>" label="&lt;java.io.FileOutputStream: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void close()>" label="&lt;java.io.BufferedOutputStream: void close()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void flush()>" label="&lt;java.io.BufferedOutputStream: void flush()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>" label="&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>" label="&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" label="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: int available()>" label="&lt;java.io.BufferedInputStream: int available()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedInputStream: int read(byte[])>" label="&lt;java.io.BufferedInputStream: int read(byte[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.Arrays: java.lang.String toString(java.lang.Object[])>" label="&lt;java.util.Arrays: java.lang.String toString(java.lang.Object[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" label="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void load(java.lang.String)>" label="&lt;java.lang.System: void load(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: int compareTo(java.lang.String)>" label="&lt;java.lang.String: int compareTo(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" label="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean load(android.app.Application,java.lang.String)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean load(android.app.Application,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String valueOf(long)>" label="&lt;java.lang.String: java.lang.String valueOf(long)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" label="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContextWrapper: android.content.res.Resources getResources()>" label="&lt;android.content.ContextWrapper: android.content.res.Resources getResources()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>" label="&lt;android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>" label="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>" label="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedReader: java.lang.String readLine()>" label="&lt;java.io.BufferedReader: java.lang.String readLine()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader)>" label="&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" label="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" label="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.d: java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[])>" label="&lt;com.netease.nis.wrapper.a.d: java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[])>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" label="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: java.lang.String substring(int)>" label="&lt;java.lang.String: java.lang.String substring(int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>" label="&lt;java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" label="&lt;java.lang.String: int lastIndexOf(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" label="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" label="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.ClassLoader: void &lt;init>()>" label="&lt;java.lang.ClassLoader: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" label="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.content.ContextWrapper: java.io.File getCacheDir()>" label="&lt;android.content.ContextWrapper: java.io.File getCacheDir()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" label="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean delete()>" label="&lt;java.io.File: boolean delete()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.File: boolean createNewFile()>" label="&lt;java.io.File: boolean createNewFile()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>" label="&lt;java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void flush()>" label="&lt;java.io.FileOutputStream: void flush()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.io.FileOutputStream: void write(byte[],int,int)>" label="&lt;java.io.FileOutputStream: void write(byte[],int,int)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.Throwable: java.lang.String toString()>" label="&lt;java.lang.Throwable: java.lang.String toString()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>" label="&lt;java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.d: void &lt;init>(java.lang.String)>" label="&lt;com.netease.nis.wrapper.a.d: void &lt;init>(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.json.JSONObject: void &lt;clinit>()>" label="&lt;org.json.JSONObject: void &lt;clinit>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" label="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)>" label="&lt;org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>" label="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: void cp()>" label="&lt;com.netease.nis.wrapper.MyJni: void cp()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;java.lang.System: void loadLibrary(java.lang.String)>" label="&lt;java.lang.System: void loadLibrary(java.lang.String)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" label="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Application: android.content.Context getBaseContext()>" label="&lt;android.app.Application: android.content.Context getBaseContext()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Application: android.content.Context getApplicationContext()>" label="&lt;android.app.Application: android.content.Context getApplicationContext()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Application: void onCreate()>" label="&lt;android.app.Application: void onCreate()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyJni: boolean run(android.content.Context,android.app.Application)>" label="&lt;com.netease.nis.wrapper.MyJni: boolean run(android.content.Context,android.app.Application)>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;com.netease.nis.wrapper.MyApplication: void &lt;init>()>" label="&lt;com.netease.nis.wrapper.MyApplication: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node><node id="&lt;android.app.Application: void &lt;init>()>" label="&lt;android.app.Application: void &lt;init>()>"><attvalues><attvalue for="0" value=""/></attvalues><viz:size value="20.0"/></node></nodes><edges count="233"><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" type="directed" label=""/><edge id="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>-->&lt;com.netease.nis.wrapper.MyApplication: void &lt;init>()>" source="&lt;dummyMainClass: void dummyMainMethod(java.lang.String[])>" target="&lt;com.netease.nis.wrapper.MyApplication: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;a.auu.a: java.lang.String c(java.lang.String)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;a.auu.a: java.lang.String c(java.lang.String)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;a.auu.a: java.lang.String c(java.lang.String)>-->&lt;java.lang.String: void &lt;init>(byte[])>" source="&lt;a.auu.a: java.lang.String c(java.lang.String)>" target="&lt;java.lang.String: void &lt;init>(byte[])>" type="directed" label=""/><edge id="&lt;a.auu.a: java.lang.String c(java.lang.String)>-->&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>" source="&lt;a.auu.a: java.lang.String c(java.lang.String)>" target="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>" type="directed" label=""/><edge id="&lt;a.auu.a: java.lang.String c(java.lang.String)>-->&lt;a.auu.a: void &lt;init>()>" source="&lt;a.auu.a: java.lang.String c(java.lang.String)>" target="&lt;a.auu.a: void &lt;init>()>" type="directed" label=""/><edge id="&lt;a.auu.a: java.lang.String c(java.lang.String)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;a.auu.a: java.lang.String c(java.lang.String)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[])>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: void &lt;init>(byte[])>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: void &lt;init>(byte[])>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.String: void &lt;init>(byte[])>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>-->&lt;java.lang.Exception: void &lt;init>()>" source="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Exception: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Exception: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Exception: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Exception: void &lt;init>()>-->&lt;java.lang.Throwable: void &lt;init>()>" source="&lt;java.lang.Exception: void &lt;init>()>" target="&lt;java.lang.Throwable: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;java.lang.Throwable: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.Object: void &lt;init>()>-->&lt;java.lang.Object: void finalize()>" source="&lt;java.lang.Object: void &lt;init>()>" target="&lt;java.lang.Object: void finalize()>" type="directed" label=""/><edge id="&lt;java.lang.Object: void &lt;init>()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Object: void &lt;init>()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Object: void finalize()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Object: void finalize()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>-->&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int)>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(java.lang.String,int)>" target="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int)>" type="directed" label=""/><edge id="&lt;java.lang.String: byte[] getBytes()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: byte[] getBytes()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int)>-->&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int)>" target="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>-->&lt;a.auu.a: boolean ooo0ooo0o0o0(byte[],int,int,boolean)>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" target="&lt;a.auu.a: boolean ooo0ooo0o0o0(byte[],int,int,boolean)>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>-->&lt;a.auu.a: void ooo0oo00000oo000o(int,byte[])>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" target="&lt;a.auu.a: void ooo0oo00000oo000o(int,byte[])>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>-->&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" target="&lt;java.lang.IllegalArgumentException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>-->&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" source="&lt;a.auu.a: byte[] ooo0ooo0o0o000o(byte[],int,int,int)>" target="&lt;java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>" type="directed" label=""/><edge id="&lt;a.auu.a: void ooo0oo00000oo000o(int,byte[])>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;a.auu.a: void ooo0oo00000oo000o(int,byte[])>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;a.auu.a: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;a.auu.a: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;android.app.Application: void attachBaseContext(android.content.Context)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;android.app.Application: void attachBaseContext(android.content.Context)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.Long: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.Long: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.Long: java.lang.Long valueOf(long)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.Long: java.lang.Long valueOf(long)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: boolean load(android.app.Application,java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean load(android.app.Application,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.String: java.lang.String valueOf(long)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.String: java.lang.String valueOf(long)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: void cp()>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: void cp()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>-->&lt;java.lang.System: void loadLibrary(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void attachBaseContext(android.content.Context)>" target="&lt;java.lang.System: void loadLibrary(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void &lt;init>()>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Long: java.lang.Long valueOf(long)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Long: java.lang.Long valueOf(long)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.io.File: boolean exists()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.io.File: java.lang.String getAbsolutePath()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.io.File: java.lang.String getAbsolutePath()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.Throwable: java.lang.String getMessage()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.Throwable: java.lang.String getMessage()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: boolean a()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>-->&lt;java.lang.System: void load(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean b(android.content.Context)>" target="&lt;java.lang.System: void load(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: java.lang.String getMessage()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: java.lang.String getMessage()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>-->&lt;android.os.Build: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" target="&lt;android.os.Build: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>-->&lt;java.lang.String: boolean contains(java.lang.CharSequence)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" target="&lt;java.lang.String: boolean contains(java.lang.CharSequence)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>-->&lt;java.io.RandomAccessFile: java.lang.String readLine()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" target="&lt;java.io.RandomAccessFile: java.lang.String readLine()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>-->&lt;java.io.RandomAccessFile: void &lt;init>(java.lang.String,java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" target="&lt;java.io.RandomAccessFile: void &lt;init>(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a()>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a()>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: boolean contains(java.lang.CharSequence)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: boolean contains(java.lang.CharSequence)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: void close()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: void printStackTrace()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: void printStackTrace()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(int)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(char)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: boolean mkdir()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: boolean mkdir()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.BufferedInputStream: void close()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.BufferedInputStream: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.BufferedInputStream: void &lt;init>(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileInputStream: void close()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileInputStream: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileInputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.BufferedOutputStream: void close()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.BufferedOutputStream: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.BufferedOutputStream: void flush()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.BufferedOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.BufferedOutputStream: void write(byte[],int,int)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.BufferedOutputStream: void &lt;init>(java.io.OutputStream)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.util.Arrays: java.lang.String toString(java.lang.Object[])>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.util.Arrays: java.lang.String toString(java.lang.Object[])>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>-->&lt;java.io.BufferedInputStream: int available()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>" target="&lt;java.io.BufferedInputStream: int available()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>-->&lt;java.io.BufferedInputStream: int read(byte[])>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(java.io.BufferedInputStream,java.io.BufferedInputStream)>" target="&lt;java.io.BufferedInputStream: int read(byte[])>" type="directed" label=""/><edge id="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Class: java.lang.Class forName(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>-->&lt;java.lang.String: int compareTo(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>" target="&lt;java.lang.String: int compareTo(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyJni: boolean a(android.content.Context)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>-->&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" target="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.MyApplication: java.lang.String getVersion()>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String valueOf(long)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String valueOf(long)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;android.content.ContextWrapper: android.content.res.Resources getResources()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;android.content.ContextWrapper: android.content.res.Resources getResources()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.lang.String: byte[] getBytes()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.lang.String: byte[] getBytes()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.io.InputStreamReader: void &lt;init>(java.io.InputStream)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.io.BufferedReader: java.lang.String readLine()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.io.BufferedReader: java.lang.String readLine()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.io.BufferedReader: void &lt;init>(java.io.Reader)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;com.netease.nis.wrapper.a.d: java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[])>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;com.netease.nis.wrapper.a.d: java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[])>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;com.netease.nis.wrapper.a.d: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;com.netease.nis.wrapper.a.d: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;java.lang.Throwable: void printStackTrace()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;java.lang.Throwable: void printStackTrace()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;org.json.JSONObject: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;org.json.JSONObject: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>-->&lt;org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.e: void a(android.content.Context)>" target="&lt;org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.b: void &lt;init>()>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;org.json.JSONObject: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[])>-->&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[])>" target="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.String: java.lang.String substring(int)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.String: java.lang.String substring(int)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.String: int lastIndexOf(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.StringBuilder: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.StringBuilder: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>-->&lt;java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.Class b(android.content.Context,java.lang.String)>" target="&lt;java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>" type="directed" label=""/><edge id="&lt;java.lang.String: java.lang.String substring(int)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: java.lang.String substring(int)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;java.lang.String: int lastIndexOf(java.lang.String)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.String: int lastIndexOf(java.lang.String)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>-->&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" source="&lt;dalvik.system.DexClassLoader: void &lt;init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" target="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" type="directed" label=""/><edge id="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>-->&lt;java.lang.ClassLoader: void &lt;init>()>" source="&lt;dalvik.system.BaseDexClassLoader: void &lt;init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" target="&lt;java.lang.ClassLoader: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>-->&lt;android.content.ContextWrapper: java.io.File getCacheDir()>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" target="&lt;android.content.ContextWrapper: java.io.File getCacheDir()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>-->&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" target="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.d: java.lang.String a(android.content.Context)>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: boolean delete()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: boolean delete()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: boolean createNewFile()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: boolean createNewFile()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: boolean exists()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: boolean exists()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: void close()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileOutputStream: void close()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileOutputStream: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileOutputStream: void flush()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileOutputStream: void flush()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileOutputStream: void write(byte[],int,int)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileOutputStream: void write(byte[],int,int)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.io.FileOutputStream: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>-->&lt;java.lang.Throwable: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String,java.lang.String)>" target="&lt;java.lang.Throwable: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;java.lang.Throwable: java.lang.String toString()>-->&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" source="&lt;java.lang.Throwable: java.lang.String toString()>" target="&lt;java.lang.RuntimeException: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.d: void &lt;init>(java.lang.String)>-->&lt;java.lang.Object: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.a.d: void &lt;init>(java.lang.String)>" target="&lt;java.lang.Object: void &lt;init>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: void close()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: void close()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>-->&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.util.zip.ZipFile: void &lt;init>(java.io.File)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>-->&lt;java.io.File: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.io.File: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>-->&lt;java.lang.Throwable: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.a.c: boolean a(java.lang.String,java.lang.String)>" target="&lt;java.lang.Throwable: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>-->&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>" target="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>-->&lt;java.lang.String: int compareTo(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>" target="&lt;java.lang.String: int compareTo(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>-->&lt;java.lang.Throwable: java.lang.String toString()>" source="&lt;com.netease.nis.wrapper.MyApplication: android.app.Application a(android.content.Context)>" target="&lt;java.lang.Throwable: java.lang.String toString()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;com.netease.nis.wrapper.MyApplication: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;android.app.Application: android.content.Context getBaseContext()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;android.app.Application: android.content.Context getBaseContext()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;android.app.Application: android.content.Context getApplicationContext()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;android.app.Application: android.content.Context getApplicationContext()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;android.app.Application: void onCreate()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;android.app.Application: void onCreate()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;java.lang.StringBuilder: void &lt;init>(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;java.lang.System: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;java.lang.System: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;a.auu.a: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;a.auu.a: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;java.lang.String: void &lt;clinit>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;java.lang.String: void &lt;clinit>()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;java.lang.System: long currentTimeMillis()>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;java.lang.System: long currentTimeMillis()>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;com.netease.nis.wrapper.MyJni: boolean run(android.content.Context,android.app.Application)>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;com.netease.nis.wrapper.MyJni: boolean run(android.content.Context,android.app.Application)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;a.auu.a: java.lang.String c(java.lang.String)>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;a.auu.a: java.lang.String c(java.lang.String)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>-->&lt;java.lang.String: java.lang.String valueOf(long)>" source="&lt;com.netease.nis.wrapper.MyApplication: void onCreate()>" target="&lt;java.lang.String: java.lang.String valueOf(long)>" type="directed" label=""/><edge id="&lt;com.netease.nis.wrapper.MyApplication: void &lt;init>()>-->&lt;android.app.Application: void &lt;init>()>" source="&lt;com.netease.nis.wrapper.MyApplication: void &lt;init>()>" target="&lt;android.app.Application: void &lt;init>()>" type="directed" label=""/></edges></graph></gexf>